[{"path":"https://rossdrucker.github.io/sportyR/CODE-OF-CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue, contacting emailing project lead (ross..drucker@gmail.com). Code Conduct adapted Contributor Covenant, version 1.0.0, available https://www.contributor-covenant.org/version/1/0/0/code--conduct.html","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to sportyR","title":"Contributing to sportyR","text":"First , thanks considering contributing sportyR! package, just like open source projects, can’t improve without contributions feedback users. sportyR labor love, one paid work . Please keep mind throughout contributions, responses bug fixes may take bit time work .","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"play-by-the-rules---code-of-conduct","dir":"","previous_headings":"","what":"Play by the Rules - Code of Conduct","title":"Contributing to sportyR","text":"Please note project released Contributor Code Conduct. participating project, ’re agreeing abide terms. sportyR’s League Office (see ) reserves right limit /exclude contributions violate Code Conduct appropriate.","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"getting-in-the-game---making-contributions","dir":"","previous_headings":"","what":"Getting In The Game - Making Contributions","title":"Contributing to sportyR","text":"’s many ways can contribute sportyR. want complete explanation can contribute (open source project, just one), check guide.","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"be-a-fan---love-the-package","dir":"","previous_headings":"Getting In The Game - Making Contributions","what":"Be A Fan - Love the Package","title":"Contributing to sportyR","text":"Think sportyR awesome? Want share awesome plots gifs made ? Let others discover telling person, tagging project Twitter, writing blog post experience ! ’re using sportyR academic context, please best cite package well.","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"scouting-reports---bugs-and-feature-suggestions","dir":"","previous_headings":"Getting In The Game - Making Contributions","what":"Scouting Reports - Bugs and Feature Suggestions","title":"Contributing to sportyR","text":"Like good sports organization, sportyR best scout solve problems become problems. Given tough test, problems sure arise. can overcome next match, however, making use good scouting (bug) reports. Please create Issue find something needs fixed. ’s good general guide follow creating one: Please double check README Issues pages sure problem hasn’t already solved. isn’t meant stop reporting problem, rather sure ’s new one can properly addressed. Title issue clear description ’re looking . Titling Issue “weird…” doesn’t give good idea ’re titling Issue “NCAA Football hashmarks place.” Even better can prefix Issue bug feature-request Spend time creating detailed explanation, reproducible example, problem ’re . Without able understand issue, ’s even harder find ’s causing occur. best make sure code well-formatted easy others read: Make sure name variables something informative Use comments indicate believe problem code occurring include necessary code recreate problem Issue report can solved correctly","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"the-league-office-directory---contributor-status","dir":"","previous_headings":"Getting In The Game - Making Contributions","what":"The League Office Directory - Contributor Status","title":"Contributing to sportyR","text":"Want join sportyR’s team help shape package? Great! ’re always recruiting! ’s can join: League Office — contributing regularly, providing substantial upgrades package’s overall structure function, helping maintain package across board, ’ll considered membership sportyR’s League Office. order join League Office, must invited current member get approved majority members League Office become League Officer, list README, also list DESCRIPTION file role \"aut\" General Managers — Writing code extends sportyR’s sport-plotting reach developing new sports earn spot General Manager. Please list (alphabetical--sport order) README sport ’ve added. Note contributing new sport, ’ll considered General Manager sport. may asked assist sport-specific issues League Office unable provide clear answer Coaching Staffs — Patching bug already-existing sport means ’re eligible sport’s coaching staff. ’ve got eye game, ’s much appreciated! Coaches can list README well, similar General Managers listed Scout Team — fixing typo, making slight modification something already exists sportyR, regularly reporting issues package encounter (even helping others solve ), can join Scout Team. Thanks front lines package’s operation! Feel free list README Scout Team brief description role (“Typo Fixer” “Question Answerer” work great, creative ’d like)","code":""},{"path":"https://rossdrucker.github.io/sportyR/CONTRIBUTING.html","id":"becoming-a-coachgeneral-manager---pull-request-process","dir":"","previous_headings":"","what":"Becoming a Coach/General Manager - Pull Request Process","title":"Contributing to sportyR","text":"become Cocah General Manager, submit Pull Request (PR) GitHub using process: Create branch git make changes wish see implemented Push branch GitHub issue PR. PR titled way ’s obvious ’s overarching goal Discuss PR much detail possible. Provide links sources, clearly explain PR necessary can used. deviations conventions rest package clearly explained, deviation necessary Continue iterating request League Office determines addition good fit sportyR request checked following points: Motivation — Clearly concisely explain motivated PR. addresses particular issue, sure link Related Changes — submit PR, make sure PR addresses one issue. want fix multiple issues, please address separate PRs ’s clear change made PR. Please also sure PR doesn’t introduce new bugs break existing code Code Style File Naming — Please follow tidyverse styleguide, deviations assignment done = operator instead <- operator, explicit return() calls return ’s needed function. Maintaining consistent styling facilitates easier current maintenance future development. Additionally, please keep consistent naming new files, especially adding new sport. Files contain new league named {sport}-{league}-features.R, new sport entirely, sure add corresponding sport-{new sport }.R file well. Although leagues sport may share different features (therefore potentially share feature functions), granular stratified approach allows easier maintenance control given league change surface’s dimensions Documentation — introducing new code, please make sure document appropriately. Documentation comes two main forms: roxygen2 documentation functions write, comments throughout code explain code trying achieve. types documentation important! sure run devtools::document() sure documentation files properly created submitting, sure check spelling grammar. quick note internal/helper function documentation: please make sure omit files package build listing .Rbuildignore. reduces overall size package submitted CRAN, allows maximum package size 5MB. Reach need help Testing — sportyR relies upon extensive testing ensure package runs smoothly. currently 100% code coverage, PR ensure remains case. test coverage, sure covr package installed run following commands: show new code lacks sufficient coverage, please sure add tests tests/ repository make sure ’re covered! help creating tests (especially visual variety), please reach League Office Although seems like lot work big hassle, League Office doesn’t expect perfection hand help needed.","code":"cov = covr::package_coverage() covr::zero_coverage(cov)"},{"path":"https://rossdrucker.github.io/sportyR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Ross Drucker Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://rossdrucker.github.io/sportyR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ross Drucker. Author, maintainer.","code":""},{"path":"https://rossdrucker.github.io/sportyR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Drucker R (2022). sportyR: Plot Scaled 'ggplot' Representations Sports Playing Surfaces. R package version 1.0.4, https://github.com/rossdrucker/sportyR.","code":"@Manual{,   title = {sportyR: Plot Scaled 'ggplot' Representations of Sports Playing Surfaces},   author = {Ross Drucker},   year = {2022},   note = {R package version 1.0.4},   url = {https://github.com/rossdrucker/sportyR}, }"},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"sportyr-","dir":"","previous_headings":"","what":"Plot Scaled ggplot Representations of Sports Playing Surfaces","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"field sports analytics evolve, ’s growing need methods track visualize players throughout game. package aims make easy regardless sport needed plotted.","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"recent release sportyR available CRAN, can installed directly via: development version sportyR can installed GitHub : library installed, sure load working environment.","code":"# Install released version from CRAN install.packages('sportyR') # Install development version from GitHub devtools::install_github(\"rossdrucker/sportyR\") # Required to use package library(sportyR)  # Not required directly for utilization of sportyR, but useful to add more data # to plots and create animations library(ggplot2) library(gganimate)"},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"plotting-functions","dir":"","previous_headings":"","what":"Plotting Functions","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"plotting functions library named geom_{sport}(), take following arguments: league: league code sport. functions, default value. supplied league case-insensitive. Future iterations package may allow full league name supplied desired (e.g. league = 'National Basketball Associaton' instead league = 'NBA'), feature currently available. full_surf: boolean indicating whether plot full surface. defaults TRUE. NOTE: argument taken geom_baseball() surfaces always shown full (’d reason draw half diamond). rotate: boolean indicating whether rotate surface. surfaces horizontal nature. defaults FALSE rotation_dir: direction rotate plot (rotate == TRUE). defaults 'ccw' counterclockwise.","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"plot-units","dir":"","previous_headings":"","what":"Plot Units","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"plot function standardized unit measure plot created, standardized primary units specified respective rule books. follows: However, since data supplied may come various units measure, plots able generated data’s units. done via unit argument geom_{sport}(). features look visually identical, underlying coordinate grid change. Additionally, convert_units() function can called data frame convert data’s arguments plot’s. example, soccer data given yards, desirable plotted meters, calling convert_units(tracking_data, 'yd', 'm', conversion_columns = c('x', 'y')) convert x y coordinates yards meters. mentioned , geom_{sport}() family functions allow rotations surfaces via rotate argument. make easy, sportyR also allows rotation data frames’ coordinates long contain x y column via rotate_coords() function. Translation reflection coordinates also possible translate() reflect() functions respectively.","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"surface-examples","dir":"","previous_headings":"","what":"Surface Examples","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"playing surfaces standard size, can rendered via call proper geom_{sport}() function like :  Certain functions able take additional parameters. example, soccer pitches always standard size. reason, users can specify call geom_soccer() touchline goal line lengths .  ’s also possible plot half-surfaces rotated surfaces:  Creating realistic, customized output plot also possible supplying proper arguments recolor. information customize next section. NOTE: arguments needed, however shown display flexibility plots can customized.  Another quick example football field, time changing one coloring elements:","code":"# Draw a basic MLB field plot geom_baseball('mlb') # Create a 100m by 75m FIFA pitch geom_soccer('fifa', touchline_length = 100, goal_line_length = 75) # Draw half of a rotated NBA court geom_basketball('nba', full_surf = FALSE, rotate = TRUE) # Create a totally customized NCAA basketball court geom_basketball(   'ncaa',   court_background_color = '#e8e0d7',   center_circle_color = '#13294b',   division_line_color = '#13294b',   endline_color = '#13294b',   sideline_color = '#13294b',   team_bench_color = '#13294b',   substitution_area_color = '#13294b',   court_apron_color = '#e84a27',   m_three_point_line_color = '#13294b',   w_three_point_line_color = '#ffffff',   m_two_point_range_color = '#e8e0d7',   w_two_point_range_color = '#ffffff66',   amateur_free_throw_lane_color = '#ffffff',   amateur_painted_area_color = '#e84a27',   amateur_free_throw_lane_lines_color = '#ffffff',   free_throw_semi_circle_line_color = '#ffffff',   free_throw_semi_circle_fill_color = '#e8e0d7',   lower_defensive_box_color = '#13294b',   restricted_area_arc_color = '#13294b',   backboard_color = '#13294b',   basket_ring_color = '#13294b',   net_color = '#ffffff' ) # Create a blue football field geom_football(   'ncaa',   grass_color = '#2e4597' )"},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"cani-functions","dir":"","previous_headings":"","what":"cani Functions","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"main functionality plotting intended straightforward easy use, questions sure arise can can’t plotted customized current version package. cani_ family functions help answer questions directly. syntax meant resemble question like Can plot football field? Can sportyR make baseball plot? message back answer. ’s work: information, call ?cani_plot_league, ?cani_plot_sport, ?cani_color_league_features.","code":"cani_plot_league('mlb') #> A plot for MLB can be created via the geom_baseball() function cani_color_league_features('nba') #> Here are the viable plotting features to color for NBA: #>  #> court_background_color #> inner_center_circle_color #> outer_center_circle_color #> division_line_color #> endline_color #> sideline_color #> team_bench_color #> substitution_area_color #> court_apron_color #> three_point_line_color #> two_point_range_color #> professional_free_throw_lane_color #> professional_painted_area_color #> amateur_free_throw_lane_color #> amateur_painted_area_color #> professional_free_throw_lane_lines_color #> amateur_free_throw_lane_lines_color #> free_throw_semi_circle_line_color #> free_throw_semi_circle_fill_color #> free_throw_dashed_semi_circle_color #> lower_defensive_box_color #> restricted_area_arc_color #> backboard_color #> basket_ring_color #> net_color"},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"adding-tracking-data","dir":"","previous_headings":"","what":"Adding Tracking Data","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"package extension ggplot2 package, data can added much way top surface plot geom_{sport}() creates. Although tracking data isn’t widely publicly available yet, examples use. data sources following examples . sportyR makes shot charts sports significantly easier. ’s look shot chart NWHL game Minnesota Whitecaps Boston Pride (data provided Big Data Cup - 2021):  functionality sportyR also makes gif-making via gganimate much easier well. play Week 15 2018 NFL season Chicago Bears Green Bay Packers. Data made available Big Data Bowl 2021 Kaggle competition.","code":"# Read data from the Big Data Cup bdc_data = read.csv('https://raw.githubusercontent.com/bigdatacup/Big-Data-Cup-2021/main/hackathon_nwhl.csv')  # Change names of X.Coordinate and Y.coordinate to x and y respectively names(bdc_data)[13:14] = c('x', 'y')  # Shift coordinates to fit on the rink bdc_data = translate(bdc_data, translate_x = -100, translate_y = -42.5)  # Subset to only be shots from the game on 2021-01-23 between the Minnesota # White Caps and Boston Pride bdc_shots = bdc_data[(bdc_data$Event == 'Shot') &                      (bdc_data$Home.Team == 'Minnesota Whitecaps') &                      (bdc_data$game_date == '2021-01-23'), ]  # Separate shots by team whitecaps_shots = bdc_shots[bdc_shots$Team == 'Minnesota Whitecaps', ] pride_shots = bdc_shots[bdc_shots$Team == 'Boston Pride', ]  # Reflect the Boston Pride shots to make them appear on the other side of the # ice pride_shots = reflect(pride_shots, over_y = TRUE)  # Draw the rink nwhl_rink = geom_hockey('nwhl')  # Add the shot locations nwhl_rink +   geom_point(data = whitecaps_shots, aes(x, y), color = '#2251b8') +   geom_point(data = pride_shots, aes(x, y), color = '#fec52e') # Load the play data example_nfl_play = read.csv('data-raw/example-pbp-data.csv')  # Prep data for plotting example_nfl_play[example_nfl_play['team'] == 'home', 'color'] = '#c83803' example_nfl_play[example_nfl_play['team'] == 'away', 'color'] = '#ffb612' example_nfl_play[example_nfl_play['team'] == 'football', 'color'] = '#624a2e'  # Create the field nfl_field = geom_football('nfl')  # Add the points on the field play_anim = nfl_field +   geom_point(data = example_nfl_play, aes(x, y), color = example_nfl_play$color) +   transition_time(example_nfl_play$frameId)  # Show the animation play_anim"},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"package released MIT License.","code":""},{"path":[]},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"league-office","dir":"","previous_headings":"Contributions","what":"League Office","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"package maintainers functional engineers Ross Drucker - sportyR Commissioner","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"general-managers","dir":"","previous_headings":"Contributions","what":"General Managers","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"Contribute adding new sport become general manager. Current general managers (sports) : Ross Drucker - Baseball Ross Drucker - Basketball Ross Drucker - Football Ross Drucker - Hockey Ross Drucker - Soccer","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"coaching-staffs","dir":"","previous_headings":"Contributions","what":"Coaching Staffs","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"Notice something sport already exists, isn’t quite right? Join sport’s coaching staff!","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"scout-team","dir":"","previous_headings":"Contributions","what":"Scout Team","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"regularly reporting issues, making slight modifications, fixing typos, just helping others navigate issues, ’re able join Scout Team!","code":""},{"path":"https://rossdrucker.github.io/sportyR/index.html","id":"sportyrtist","dir":"","previous_headings":"Contributions","what":"sportyRtist","title":"Plot Scaled ggplot Representations of Sports Playing Surfaces","text":"sportyR logo created Lindsey Kelso. Check Instagram online shop!","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/add_feature.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a feature to a ggplot2 instance — add_feature","title":"Add a feature to a ggplot2 instance — add_feature","text":"Add feature ggplot2 instance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/add_feature.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a feature to a ggplot2 instance — add_feature","text":"","code":"add_feature(g, feature_df, feature_color, group = NULL)"},{"path":"https://rossdrucker.github.io/sportyR/reference/add_feature.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a feature to a ggplot2 instance — add_feature","text":"g ggplot2 instance onto feature added feature_df data frame containing points add feature feature_color hexadecimal string color feature added plot group grouping pass along ggplot2::aes(). used speed NFL NCAA Football plotting functions","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/add_feature.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a feature to a ggplot2 instance — add_feature","text":"ggplot2 instance feature added ","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_color_league_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see what features of a surface can be colored by a user — cani_color_league_features","title":"Check to see what features of a surface can be colored by a user — cani_color_league_features","text":"Check see features surface can colored user","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_color_league_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see what features of a surface can be colored by a user — cani_color_league_features","text":"","code":"cani_color_league_features(league_code, sport_name = NULL)"},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_color_league_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see what features of a surface can be colored by a user — cani_color_league_features","text":"league_code case-insensitive league code plotted sport_name name sport use event league_code supplied one sport associated . Default: NULL","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_color_league_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see what features of a surface can be colored by a user — cani_color_league_features","text":"Nothing, message sent console user","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_color_league_features.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see what features of a surface can be colored by a user — cani_color_league_features","text":"","code":"cani_color_league_features(\"NCAA\", \"basketball\") #> Here are the viable plotting features to color for NCAA: #>  #> court_background_color #> center_circle_color #> division_line_color #> endline_color #> sideline_color #> team_bench_color #> substitution_area_color #> court_apron_color #> m_three_point_line_color #> w_three_point_line_color #> m_two_point_range_color #> w_two_point_range_color #> professional_free_throw_lane_color #> professional_painted_area_color #> amateur_free_throw_lane_color #> amateur_painted_area_color #> professional_free_throw_lane_lines_color #> amateur_free_throw_lane_lines_color #> free_throw_semi_circle_line_color #> free_throw_semi_circle_fill_color #> lower_defensive_box_color #> restricted_area_arc_color #> backboard_color #> basket_ring_color #> net_color"},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_league.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","title":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","text":"Check see league can plotted, alert user functions league work ","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_league.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","text":"","code":"cani_plot_league(league_code)"},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_league.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","text":"league_code case-insensitive league code plotted","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_league.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","text":"Nothing, message sent console user","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_league.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see if a league can be plotted, and alert the user as to which\nfunctions that league will work for — cani_plot_league","text":"","code":"cani_plot_league(\"MLB\") #> A plot for MLB can be created via the geom_baseball() function"},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_sport.html","id":null,"dir":"Reference","previous_headings":"","what":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","title":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","text":"Check see sport can plotted, alert user leagues plottable sport","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_sport.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","text":"","code":"cani_plot_sport(sport)"},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_sport.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","text":"sport case-insensitive sport name","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_sport.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","text":"Nothing, message sent console user","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cani_plot_sport.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check to see if a sport can be plotted, and alert the user as to which\nleagues are plottable for the sport — cani_plot_sport","text":"","code":"cani_plot_sport(\"basketball\") #> geom_basketball() can be used to plot for the following leagues: COLLEGE, NBA, NCAA, NCAAM, NCAAW, WNBA"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_dead_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the dead line — cfl_feature_dead_line","title":"Generate the data frame for the points that comprise the dead line — cfl_feature_dead_line","text":"Generate data frame points comprise dead line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_dead_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the dead line — cfl_feature_dead_line","text":"","code":"cfl_feature_dead_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_dead_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the dead line — cfl_feature_dead_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_dead_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the dead line — cfl_feature_dead_line","text":"data frame containing points comprise dead lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the directional arrows — cfl_feature_directional_arrows","title":"Generate the data frame for the points that comprise the directional arrows — cfl_feature_directional_arrows","text":"Generate data frame points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the directional arrows — cfl_feature_directional_arrows","text":"","code":"cfl_feature_directional_arrows(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the directional arrows — cfl_feature_directional_arrows","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the directional arrows — cfl_feature_directional_arrows","text":"data frame contains points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the cfl_feature_directional_arrows() function below and helps to\noptimize performance — cfl_feature_directional_arrows_df_maker","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the cfl_feature_directional_arrows() function below and helps to\noptimize performance — cfl_feature_directional_arrows_df_maker","text":"Generate data frames points comprise directional arrows. function fed cfl_feature_directional_arrows() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the cfl_feature_directional_arrows() function below and helps to\noptimize performance — cfl_feature_directional_arrows_df_maker","text":"","code":"cfl_feature_directional_arrows_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   lower = TRUE )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the cfl_feature_directional_arrows() function below and helps to\noptimize performance — cfl_feature_directional_arrows_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' lower boolean indicating whether return lower directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_directional_arrows_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the cfl_feature_directional_arrows() function below and helps to\noptimize performance — cfl_feature_directional_arrows_df_maker","text":"data frame (list data frames) contain coordinates directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — cfl_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — cfl_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — cfl_feature_goal_line","text":"","code":"cfl_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — cfl_feature_goal_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — cfl_feature_goal_line","text":"data frame containing points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — cfl_feature_grass","title":"Generate the data frame for the points that comprise the grass background — cfl_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — cfl_feature_grass","text":"","code":"cfl_feature_grass(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — cfl_feature_grass","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — cfl_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — cfl_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — cfl_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — cfl_feature_sideline","text":"","code":"cfl_feature_sideline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — cfl_feature_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — cfl_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the yard lines — cfl_feature_yard_markings","title":"Generate the data frame for the points that comprise the yard lines — cfl_feature_yard_markings","text":"Generate data frame points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the yard lines — cfl_feature_yard_markings","text":"","code":"cfl_feature_yard_markings(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the yard lines — cfl_feature_yard_markings","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the yard lines — cfl_feature_yard_markings","text":"data frame containing points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the cfl_feature_yard_markings() function below and helps to\noptimize performance — cfl_feature_yard_markings_df_maker","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the cfl_feature_yard_markings() function below and helps to\noptimize performance — cfl_feature_yard_markings_df_maker","text":"Generate data frames points comprise yard lines. function fed cfl_feature_yard_markings() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the cfl_feature_yard_markings() function below and helps to\noptimize performance — cfl_feature_yard_markings_df_maker","text":"","code":"cfl_feature_yard_markings_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the cfl_feature_yard_markings() function below and helps to\noptimize performance — cfl_feature_yard_markings_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_markings_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the cfl_feature_yard_markings() function below and helps to\noptimize performance — cfl_feature_yard_markings_df_maker","text":"data frame (list data frames) contain coordinates yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that will become the yard marking\nnumbers — cfl_feature_yard_numbers","title":"Generate the data frame for the points that will become the yard marking\nnumbers — cfl_feature_yard_numbers","text":"Generate data frame points become yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that will become the yard marking\nnumbers — cfl_feature_yard_numbers","text":"","code":"cfl_feature_yard_numbers(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that will become the yard marking\nnumbers — cfl_feature_yard_numbers","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_feature_yard_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that will become the yard marking\nnumbers — cfl_feature_yard_numbers","text":"data frame contains information needed add yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an CFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_cfl() function (or its wrapper geom_football()) — cfl_features_set_colors","title":"Generate the list of colors for an CFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_cfl() function (or its wrapper geom_football()) — cfl_features_set_colors","text":"Generate list colors CFL field plot. defaults can overwritten supplying names list elements geom_cfl() function (wrapper geom_football())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an CFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_cfl() function (or its wrapper geom_football()) — cfl_features_set_colors","text":"","code":"cfl_features_set_colors(   grass_color = \"#196f0c\",   sideline_1_color = \"#ffffff\",   sideline_2_color = \"#ffffff\",   dead_line_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   yard_markings_color = \"#ffffff\",   directional_arrows_color = \"#ffffff\",   yard_numbers_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an CFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_cfl() function (or its wrapper geom_football()) — cfl_features_set_colors","text":"grass_color hexadecimal string representing color use feature sideline_1_color hexadecimal string representing color use feature sideline_2_color hexadecimal string representing color use feature dead_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature yard_markings_color hexadecimal string representing color use feature directional_arrows_color hexadecimal string representing color use feature yard_numbers_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/cfl_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an CFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_cfl() function (or its wrapper geom_football()) — cfl_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/check_data_frame_for_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Check a data frame to ensure it has the minimal features for plotting — check_data_frame_for_plot","title":"Check a data frame to ensure it has the minimal features for plotting — check_data_frame_for_plot","text":"Check data frame ensure minimal features plotting","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/check_data_frame_for_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check a data frame to ensure it has the minimal features for plotting — check_data_frame_for_plot","text":"","code":"check_data_frame_for_plot(df)"},{"path":"https://rossdrucker.github.io/sportyR/reference/check_data_frame_for_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check a data frame to ensure it has the minimal features for plotting — check_data_frame_for_plot","text":"df data frame check","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/check_data_frame_for_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check a data frame to ensure it has the minimal features for plotting — check_data_frame_for_plot","text":"boolean indicating whether minimal features needed plotting (column called x column called y) present","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/convert_units.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to convert all units, regardless of starting and ending units — convert_units","title":"Function to convert all units, regardless of starting and ending units — convert_units","text":"Function convert units, regardless starting ending units","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/convert_units.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to convert all units, regardless of starting and ending units — convert_units","text":"","code":"convert_units(meas, from_unit, to_unit, conversion_columns = NULL)"},{"path":"https://rossdrucker.github.io/sportyR/reference/convert_units.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to convert all units, regardless of starting and ending units — convert_units","text":"meas measurement unit length from_unit string containing original unit measure converted to_unit string containing ending unit measure conversion_columns vector containing columns convert meas type data.frame","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/convert_units.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to convert all units, regardless of starting and ending units — convert_units","text":"measurement converted units","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/convert_units.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to convert all units, regardless of starting and ending units — convert_units","text":"","code":"convert_units(1, \"in\", \"cm\") #> [1] 2.54 convert_units(100, \"cm\", \"m\") #> [1] 1"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of x and y coordinates that form a circle (or the\narc of a circle) — create_circle","title":"Create a set of x and y coordinates that form a circle (or the\narc of a circle) — create_circle","text":"Create set x y coordinates form circle (arc circle)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of x and y coordinates that form a circle (or the\narc of a circle) — create_circle","text":"","code":"create_circle(center = c(0, 0), npoints = 1000, d = 2, start = 0, end = 2)"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of x and y coordinates that form a circle (or the\narc of a circle) — create_circle","text":"center (x, y) coordinates center circle. Default: (0, 0) npoints number points create circle. also length resulting data frame. Default: 1000 d diameter circle UNITS PLOT. default unit feet. Default: 2 (unit circle) start angle (radians, divided pi) start drawing circle, zero runs along +x axis. Default: 0 end angle (radians, divided pi) stop drawing circle, zero runs along +x axis. Default: 2","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of x and y coordinates that form a circle (or the\narc of a circle) — create_circle","text":"data frame containing points needed draw specified circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_diamond.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of x and y coordinates that form a diamond This\nfunction is a wrapper on create_rectangle() above — create_diamond","title":"Create a set of x and y coordinates that form a diamond This\nfunction is a wrapper on create_rectangle() above — create_diamond","text":"Create set x y coordinates form diamond function wrapper create_rectangle() ","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_diamond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of x and y coordinates that form a diamond This\nfunction is a wrapper on create_rectangle() above — create_diamond","text":"","code":"create_diamond(height, width, center = c(0, 0))"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_diamond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of x and y coordinates that form a diamond This\nfunction is a wrapper on create_rectangle() above — create_diamond","text":"height vertical height diamond width horizontal width diamond center center coordinates diamond","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_diamond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of x and y coordinates that form a diamond This\nfunction is a wrapper on create_rectangle() above — create_diamond","text":"data frame containing points needed draw specified diamond","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_plot_base.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the base for the ggplot2 instance with the correct theme elements — create_plot_base","title":"Create the base for the ggplot2 instance with the correct theme elements — create_plot_base","text":"Create base ggplot2 instance correct theme elements","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_plot_base.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the base for the ggplot2 instance with the correct theme elements — create_plot_base","text":"","code":"create_plot_base(rotate = FALSE, background_color = NULL)"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_plot_base.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the base for the ggplot2 instance with the correct theme elements — create_plot_base","text":"rotate Whether final output rotated (adjusts margins). Default: FALSE background_color hexadecimal string representing color use plot's background. Default: NULL","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_plot_base.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the base for the ggplot2 instance with the correct theme elements — create_plot_base","text":"ggplot2 instance onto features added","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_rectangle.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of x and y coordinates that form a rectangle — create_rectangle","title":"Create a set of x and y coordinates that form a rectangle — create_rectangle","text":"Create set x y coordinates form rectangle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_rectangle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of x and y coordinates that form a rectangle — create_rectangle","text":"","code":"create_rectangle(x_min, x_max, y_min, y_max)"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_rectangle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of x and y coordinates that form a rectangle — create_rectangle","text":"x_min minimum value x x_max maximum value x y_min minimum value y y_max maximum value y","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_rectangle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of x and y coordinates that form a rectangle — create_rectangle","text":"data frame containing points needed draw specified rectangle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_square.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a set of x and y coordinates that form a square. This\nfunction is a wrapper on create_rectangle() above — create_square","title":"Create a set of x and y coordinates that form a square. This\nfunction is a wrapper on create_rectangle() above — create_square","text":"Create set x y coordinates form square. function wrapper create_rectangle() ","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_square.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a set of x and y coordinates that form a square. This\nfunction is a wrapper on create_rectangle() above — create_square","text":"","code":"create_square(side_length, center = c(0, 0))"},{"path":"https://rossdrucker.github.io/sportyR/reference/create_square.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a set of x and y coordinates that form a square. This\nfunction is a wrapper on create_rectangle() above — create_square","text":"side_length length side square center center coordinates square","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/create_square.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a set of x and y coordinates that form a square. This\nfunction is a wrapper on create_rectangle() above — create_square","text":"data frame containing points needed draw specified square","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/distance_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the Euclidean distance between two points — distance_formula","title":"Get the Euclidean distance between two points — distance_formula","text":"Get Euclidean distance two points","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/distance_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the Euclidean distance between two points — distance_formula","text":"","code":"distance_formula(point_1_x, point_1_y, point_2_x = 0, point_2_y = 0)"},{"path":"https://rossdrucker.github.io/sportyR/reference/distance_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the Euclidean distance between two points — distance_formula","text":"point_1_x point's (vector points') x coordinate point_1_y point's (vector points') y coordinate point_2_x point's (vector points') x coordinate point_2_y point's (vector points') y coordinate","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/distance_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the Euclidean distance between two points — distance_formula","text":"distance two supplied points","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_backboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the backboard — fiba_feature_backboard","title":"Generate the data frame for the points that comprise the backboard — fiba_feature_backboard","text":"Generate data frame points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_backboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the backboard — fiba_feature_backboard","text":"","code":"fiba_feature_backboard(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_backboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the backboard — fiba_feature_backboard","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_backboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the backboard — fiba_feature_backboard","text":"data frame containing points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_basket_ring.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the basket ring — fiba_feature_basket_ring","title":"Generate the data frame for the points that comprise the basket ring — fiba_feature_basket_ring","text":"Generate data frame points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_basket_ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the basket ring — fiba_feature_basket_ring","text":"","code":"fiba_feature_basket_ring(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_basket_ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the basket ring — fiba_feature_basket_ring","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_basket_ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the basket ring — fiba_feature_basket_ring","text":"data frame containing points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circles — fiba_feature_center_circle","title":"Generate the data frame for the points that comprise the center circles — fiba_feature_center_circle","text":"Generate data frame points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circles — fiba_feature_center_circle","text":"","code":"fiba_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circles — fiba_feature_center_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circles — fiba_feature_center_circle","text":"list data frames containing points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_apron.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court apron — fiba_feature_court_apron","title":"Generate the data frame for the points that comprise the court apron — fiba_feature_court_apron","text":"Generate data frame points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_apron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court apron — fiba_feature_court_apron","text":"","code":"fiba_feature_court_apron(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_apron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court apron — fiba_feature_court_apron","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_apron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court apron — fiba_feature_court_apron","text":"data frame containing points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_bground.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise a regulation FIBA\nbasketball court — fiba_feature_court_bground","title":"Generate the data frame for the points that comprise a regulation FIBA\nbasketball court — fiba_feature_court_bground","text":"Generate data frame points comprise regulation FIBA basketball court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_bground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise a regulation FIBA\nbasketball court — fiba_feature_court_bground","text":"","code":"fiba_feature_court_bground(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_bground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise a regulation FIBA\nbasketball court — fiba_feature_court_bground","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_court_bground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise a regulation FIBA\nbasketball court — fiba_feature_court_bground","text":"data frame containing points comprise court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_division_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the division line — fiba_feature_division_line","title":"Generate the data frame for the points that comprise the division line — fiba_feature_division_line","text":"Generate data frame points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_division_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the division line — fiba_feature_division_line","text":"","code":"fiba_feature_division_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_division_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the division line — fiba_feature_division_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_division_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the division line — fiba_feature_division_line","text":"data frame containing points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the end lines — fiba_feature_endline","title":"Generate the data frame for the points that comprise the end lines — fiba_feature_endline","text":"Generate data frame points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the end lines — fiba_feature_endline","text":"","code":"fiba_feature_endline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the end lines — fiba_feature_endline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the end lines — fiba_feature_endline","text":"data frame containing points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — fiba_feature_free_throw_lane","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — fiba_feature_free_throw_lane","text":"Generate data frames points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — fiba_feature_free_throw_lane","text":"","code":"fiba_feature_free_throw_lane(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — fiba_feature_free_throw_lane","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — fiba_feature_free_throw_lane","text":"list data frames containing points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — fiba_feature_free_throw_lane_lines","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — fiba_feature_free_throw_lane_lines","text":"Generate data frames points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — fiba_feature_free_throw_lane_lines","text":"","code":"fiba_feature_free_throw_lane_lines(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — fiba_feature_free_throw_lane_lines","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_lane_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — fiba_feature_free_throw_lane_lines","text":"list data frames containing points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — fiba_feature_free_throw_semi_circle","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — fiba_feature_free_throw_semi_circle","text":"Generate data frames points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — fiba_feature_free_throw_semi_circle","text":"","code":"fiba_feature_free_throw_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — fiba_feature_free_throw_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_free_throw_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — fiba_feature_free_throw_semi_circle","text":"list data frame containing points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — fiba_feature_net","title":"Generate the data frame for the points that comprise the net — fiba_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — fiba_feature_net","text":"","code":"fiba_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — fiba_feature_net","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — fiba_feature_net","text":"data frame containing points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_restricted_area_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — fiba_feature_restricted_area_arc","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — fiba_feature_restricted_area_arc","text":"Generate data frame points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_restricted_area_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — fiba_feature_restricted_area_arc","text":"","code":"fiba_feature_restricted_area_arc(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_restricted_area_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — fiba_feature_restricted_area_arc","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_restricted_area_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — fiba_feature_restricted_area_arc","text":"data frame containing points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — fiba_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — fiba_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — fiba_feature_sideline","text":"","code":"fiba_feature_sideline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — fiba_feature_sideline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — fiba_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_team_bench.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the team bench — fiba_feature_team_bench","title":"Generate the data frames for the points that comprise the team bench — fiba_feature_team_bench","text":"Generate data frames points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_team_bench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the team bench — fiba_feature_team_bench","text":"","code":"fiba_feature_team_bench(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_team_bench.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the team bench — fiba_feature_team_bench","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_team_bench.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the team bench — fiba_feature_team_bench","text":"list data frames containing points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_three_point_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — fiba_feature_three_point_line","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — fiba_feature_three_point_line","text":"Generate data frame points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_three_point_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — fiba_feature_three_point_line","text":"","code":"fiba_feature_three_point_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_three_point_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — fiba_feature_three_point_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_feature_three_point_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — fiba_feature_three_point_line","text":"list data frames containing points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for a FIBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fiba() function (or its wrapper geom_basketball()) — fiba_features_set_colors","title":"Generate the list of colors for a FIBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fiba() function (or its wrapper geom_basketball()) — fiba_features_set_colors","text":"Generate list colors FIBA court plot. defaults can overwritten supplying names list elements geom_fiba() function (wrapper geom_basketball())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for a FIBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fiba() function (or its wrapper geom_basketball()) — fiba_features_set_colors","text":"","code":"fiba_features_set_colors(   court_background_color = \"#d2ab6f\",   center_circle_color = \"#000000\",   division_line_color = \"#000000\",   endline_color = \"#000000\",   sideline_color = \"#000000\",   team_bench_color = \"#000000\",   court_apron_color = \"#d2ab6f\",   three_point_line_color = \"#000000\",   two_point_range_color = \"#d2ab6f\",   free_throw_lane_color = \"#000000\",   painted_area_color = \"#d2ab6f\",   free_throw_lane_lines_color = \"#000000\",   free_throw_semi_circle_line_color = \"#000000\",   free_throw_semi_circle_fill_color = \"#d2ab6f\",   restricted_area_arc_color = \"#000000\",   backboard_color = \"#000000\",   basket_ring_color = \"#000000\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for a FIBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fiba() function (or its wrapper geom_basketball()) — fiba_features_set_colors","text":"court_background_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature division_line_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature sideline_color hexadecimal string representing color use feature team_bench_color hexadecimal string representing color use feature court_apron_color hexadecimal string representing color use feature three_point_line_color hexadecimal string representing color use feature two_point_range_color hexadecimal string representing color use feature free_throw_lane_color hexadecimal string representing color use feature painted_area_color hexadecimal string representing color use feature free_throw_lane_lines_color hexadecimal string representing color use feature free_throw_semi_circle_line_color hexadecimal string representing color use feature free_throw_semi_circle_fill_color hexadecimal string representing color use feature restricted_area_arc_color hexadecimal string representing color use feature backboard_color hexadecimal string representing color use feature basket_ring_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fiba_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for a FIBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fiba() function (or its wrapper geom_basketball()) — fiba_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_5.5m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 6-yard box — fifa_feature_box_5.5m","title":"Generate the data frame for the points that comprise the 6-yard box — fifa_feature_box_5.5m","text":"Generate data frame points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_5.5m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 6-yard box — fifa_feature_box_5.5m","text":"","code":"fifa_feature_box_5.5m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_5.5m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 6-yard box — fifa_feature_box_5.5m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_5.5m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 6-yard box — fifa_feature_box_5.5m","text":"data frame containing points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_9.15m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 18-yard box — fifa_feature_box_9.15m","title":"Generate the data frame for the points that comprise the 18-yard box — fifa_feature_box_9.15m","text":"Generate data frame points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_9.15m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 18-yard box — fifa_feature_box_9.15m","text":"","code":"fifa_feature_box_9.15m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_9.15m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 18-yard box — fifa_feature_box_9.15m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_box_9.15m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 18-yard box — fifa_feature_box_9.15m","text":"data frame containing points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — fifa_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — fifa_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — fifa_feature_center_circle","text":"","code":"fifa_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — fifa_feature_center_circle","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — fifa_feature_center_circle","text":"data frame containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark — fifa_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark — fifa_feature_center_mark","text":"Generate data frame points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark — fifa_feature_center_mark","text":"","code":"fifa_feature_center_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark — fifa_feature_center_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark — fifa_feature_center_mark","text":"data frame containing points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_corner_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the corner circle — fifa_feature_corner_circle","title":"Generate the data frame for the points that comprise the corner circle — fifa_feature_corner_circle","text":"Generate data frame points comprise corner circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_corner_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the corner circle — fifa_feature_corner_circle","text":"","code":"fifa_feature_corner_circle(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_corner_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the corner circle — fifa_feature_corner_circle","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_corner_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the corner circle — fifa_feature_corner_circle","text":"list data frames containing points comprise corner quarter-circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — fifa_feature_goal","title":"Generate the data frame for the points that comprise the goal — fifa_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — fifa_feature_goal","text":"","code":"fifa_feature_goal(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — fifa_feature_goal","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — fifa_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal lines — fifa_feature_goal_line","title":"Generate the data frame for the points that comprise the goal lines — fifa_feature_goal_line","text":"Generate data frame points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal lines — fifa_feature_goal_line","text":"","code":"fifa_feature_goal_line(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal lines — fifa_feature_goal_line","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal lines — fifa_feature_goal_line","text":"data frame containing points comprise goal line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — fifa_feature_grass","title":"Generate the data frame for the points that comprise the grass background — fifa_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — fifa_feature_grass","text":"","code":"fifa_feature_grass(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — fifa_feature_grass","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — fifa_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_halfway_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the halfway line — fifa_feature_halfway_line","title":"Generate the data frame for the points that comprise the halfway line — fifa_feature_halfway_line","text":"Generate data frame points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_halfway_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the halfway line — fifa_feature_halfway_line","text":"","code":"fifa_feature_halfway_line(   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_halfway_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the halfway line — fifa_feature_halfway_line","text":"goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_halfway_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the halfway line — fifa_feature_halfway_line","text":"data frame containing points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty arc — fifa_feature_penalty_arc","title":"Generate the data frame for the points that comprise the penalty arc — fifa_feature_penalty_arc","text":"Generate data frame points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty arc — fifa_feature_penalty_arc","text":"","code":"fifa_feature_penalty_arc(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty arc — fifa_feature_penalty_arc","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty arc — fifa_feature_penalty_arc","text":"data frame containing points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty mark — fifa_feature_penalty_mark","title":"Generate the data frame for the points that comprise the penalty mark — fifa_feature_penalty_mark","text":"Generate data frame points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty mark — fifa_feature_penalty_mark","text":"","code":"fifa_feature_penalty_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty mark — fifa_feature_penalty_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_penalty_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty mark — fifa_feature_penalty_mark","text":"data frame containing points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_touchlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the touchlines — fifa_feature_touchlines","title":"Generate the data frame for the points that comprise the touchlines — fifa_feature_touchlines","text":"Generate data frame points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_touchlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the touchlines — fifa_feature_touchlines","text":"","code":"fifa_feature_touchlines(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_touchlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the touchlines — fifa_feature_touchlines","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_feature_touchlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the touchlines — fifa_feature_touchlines","text":"list data frames containing points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for a FIFA pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fifa() function (or its wrapper geom_soccer()) — fifa_features_set_colors","title":"Generate the list of colors for a FIFA pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fifa() function (or its wrapper geom_soccer()) — fifa_features_set_colors","text":"Generate list colors FIFA pitch plot. defaults can overwritten supplying names list elements geom_fifa() function (wrapper geom_soccer())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for a FIFA pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fifa() function (or its wrapper geom_soccer()) — fifa_features_set_colors","text":"","code":"fifa_features_set_colors(   grass_color = \"#196f0c\",   touchline_1_color = \"#ffffff\",   touchline_2_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   halfway_line_color = \"#ffffff\",   center_circle_color = \"#ffffff\",   corner_circle_1_color = \"#ffffff\",   corner_circle_2_color = \"#ffffff\",   corner_circle_3_color = \"#ffffff\",   corner_circle_4_color = \"#ffffff\",   box_5.5m_color = \"#ffffff\",   box_9.15m_color = \"#ffffff\",   penalty_arc_color = \"#ffffff\",   penalty_mark_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   goal_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for a FIFA pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fifa() function (or its wrapper geom_soccer()) — fifa_features_set_colors","text":"grass_color hexadecimal string representing color use feature touchline_1_color hexadecimal string representing color use feature touchline_2_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature halfway_line_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature corner_circle_1_color hexadecimal string representing color use feature corner_circle_2_color hexadecimal string representing color use feature corner_circle_3_color hexadecimal string representing color use feature corner_circle_4_color hexadecimal string representing color use feature box_5.5m_color hexadecimal string representing color use feature box_9.15m_color hexadecimal string representing color use feature penalty_arc_color hexadecimal string representing color use feature penalty_mark_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/fifa_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for a FIFA pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_fifa() function (or its wrapper geom_soccer()) — fifa_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_baseball.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","title":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","text":"Generate ggplot2 instance containing regulation baseball field specified league","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_baseball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","text":"","code":"geom_baseball(league, ...)"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_baseball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","text":"league league draw surface ... Additional arguments pass function. colors pass mlb_features_set_colors() function, units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_baseball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","text":"ggplot2 instance full-surface representation baseball field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_baseball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a ggplot2 instance containing a regulation baseball field for a\nspecified league — geom_baseball","text":"","code":"geom_baseball(league = \"MLB\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_basketball.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","title":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","text":"Create ggplot2 instance scale model basketball court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_basketball.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","text":"","code":"geom_basketball(   league,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_basketball.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","text":"league league draw surface full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' ... Additional arguments pass function. colors pass {league}_features_set_colors() function, units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_basketball.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","text":"ggplot2 instance full-surface representation basketball court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_basketball.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a ggplot2 instance of a scale model of a basketball court — geom_basketball","text":"","code":"geom_basketball(league = \"NBA\")  geom_basketball(league = \"NCAA\", full_surf = FALSE)  geom_basketball(league = \"FIBA\", rotate = TRUE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_cfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation CFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_cfl","title":"Create a ggplot2 instance that represents a regulation CFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_cfl","text":"Create ggplot2 instance represents regulation CFL field, bottom left corner left-endzone corresponding  (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_cfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation CFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_cfl","text":"","code":"geom_cfl(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"yd\",   origin_bottom_left = TRUE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_cfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation CFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_cfl","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'yd' origin_bottom_left boolean indicating whether place origin bottom-left corner plot (dead_line meets sideline). Default: TRUE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass cfl_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_cfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation CFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_cfl","text":"ggplot2 instance represents regulation CFL field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fiba.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation FIBA court, with the\ncenter of the court corresponding to (0, 0) — geom_fiba","title":"Create a ggplot2 instance that represents a regulation FIBA court, with the\ncenter of the court corresponding to (0, 0) — geom_fiba","text":"Create ggplot2 instance represents regulation FIBA court, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fiba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation FIBA court, with the\ncenter of the court corresponding to (0, 0) — geom_fiba","text":"","code":"geom_fiba(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fiba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation FIBA court, with the\ncenter of the court corresponding to (0, 0) — geom_fiba","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass fiba_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fiba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation FIBA court, with the\ncenter of the court corresponding to (0, 0) — geom_fiba","text":"ggplot2 instance represents regulation NBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fifa.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation FIFA pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_fifa","title":"Create a ggplot2 instance that represents a regulation FIFA pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_fifa","text":"Create ggplot2 instance represents regulation FIFA pitch, center pitch corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fifa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation FIFA pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_fifa","text":"","code":"geom_fifa(   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fifa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation FIFA pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_fifa","text":"touchline_length entire length touchline (halves). can units, default meters. Default: 120 goal_line_length length goal line. can units, default meters. Default: 90 full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass fifa_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_fifa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation FIFA pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_fifa","text":"ggplot2 instance represents regulation FIFA pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_football.html","id":null,"dir":"Reference","previous_headings":"","what":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","title":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","text":"draws football field standard coordinate system, (0, 0) bottom left corner left-endzone. unit coordinate system corresponds 1 yard Generate ggplot2 instance containing regulation football field specified league","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_football.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","text":"","code":"geom_football(   league,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_football.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","text":"league league draw surface full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' ... Additional arguments pass function. colors pass {league}_features_set_colors() function, (although colors defined rule book) units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_football.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","text":"ggplot2 instance full-surface representation football field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_football.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"This draws a football field in its standard coordinate system, with (0, 0)\nbeing the bottom left corner of the left-most endzone. Each unit on the\ncoordinate system corresponds to 1 yard\nGenerate a ggplot2 instance containing a regulation football field for a\nspecified league — geom_football","text":"","code":"geom_football(league = \"NFL\")  geom_football(league = \"NCAA\", rotate = TRUE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_hockey.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","title":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","text":"Generate ggplot2 instance containing ice rink specified league","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_hockey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","text":"","code":"geom_hockey(   league,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_hockey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","text":"league league draw surface full_surf boolean indicating whether plot full surface represenation surface. Default: TRUE rotate boolean indicating whether final rink plot needs rotated. Default: FALSE rotation_dir string indicating direction rotate final rink plot Default: 'ccw' ... Additional arguments pass function. colors pass {league}_features_set_colors() function, (although colors defined rule book) units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_hockey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","text":"ggplot2 instance full-surface representation ice hockey rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_hockey.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a ggplot2 instance containing an ice rink for a specified league — geom_hockey","text":"","code":"geom_hockey(league = \"NHL\")  geom_hockey(league = \"IIHF\", full_surf = FALSE)  geom_hockey(league = \"NCAA\", rotate = TRUE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_iihf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation IIHF rink, with the\ncenter of the rink corresponding to (0, 0) — geom_iihf","title":"Create a ggplot2 instance that represents a regulation IIHF rink, with the\ncenter of the rink corresponding to (0, 0) — geom_iihf","text":"Create ggplot2 instance represents regulation IIHF rink, center rink corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_iihf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation IIHF rink, with the\ncenter of the rink corresponding to (0, 0) — geom_iihf","text":"","code":"geom_iihf(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_iihf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation IIHF rink, with the\ncenter of the rink corresponding to (0, 0) — geom_iihf","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass iihf_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_iihf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation IIHF rink, with the\ncenter of the rink corresponding to (0, 0) — geom_iihf","text":"ggplot2 instance represents regulation IIHF rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_itf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation ITF tennis court, with\nthe center of the net corresponding to (0, 0) — geom_itf","title":"Create a ggplot2 instance that represents a regulation ITF tennis court, with\nthe center of the net corresponding to (0, 0) — geom_itf","text":"Create ggplot2 instance represents regulation ITF tennis court, center net corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_itf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation ITF tennis court, with\nthe center of the net corresponding to (0, 0) — geom_itf","text":"","code":"geom_itf(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_itf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation ITF tennis court, with\nthe center of the net corresponding to (0, 0) — geom_itf","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'yd' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass itf_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_itf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation ITF tennis court, with\nthe center of the net corresponding to (0, 0) — geom_itf","text":"ggplot2 instance represents regulation NFL field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mlb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NBA court, with the\nback tip of home plate corresponding to (0, 0) — geom_mlb","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\nback tip of home plate corresponding to (0, 0) — geom_mlb","text":"Create ggplot2 instance represents regulation NBA court, back tip home plate corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mlb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\nback tip of home plate corresponding to (0, 0) — geom_mlb","text":"","code":"geom_mlb(background_color = \"#395d33\", unit = \"ft\", ...)"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mlb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\nback tip of home plate corresponding to (0, 0) — geom_mlb","text":"background_color hexadecimal string representing color use plot's background. Default: '#395d33' (green) unit string indicating units make plot. Default: 'ft' ... Additional arguments pass function. colors pass mlb_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mlb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\nback tip of home plate corresponding to (0, 0) — geom_mlb","text":"ggplot2 instance represents regulation NBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mls.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation MLS pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_mls","title":"Create a ggplot2 instance that represents a regulation MLS pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_mls","text":"Create ggplot2 instance represents regulation MLS pitch, center pitch corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation MLS pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_mls","text":"","code":"geom_mls(   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation MLS pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_mls","text":"touchline_length entire length touchline (halves). can units, default meters. Default: 120 goal_line_length length goal line. can units, default meters. Default: 90 full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass mls_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_mls.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation MLS pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_mls","text":"ggplot2 instance represents regulation MLS pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nba.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NBA court, with the\ncenter of the court corresponding to (0, 0) — geom_nba","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\ncenter of the court corresponding to (0, 0) — geom_nba","text":"Create ggplot2 instance represents regulation NBA court, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\ncenter of the court corresponding to (0, 0) — geom_nba","text":"","code":"geom_nba(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   include_amateur_free_throw_lane = TRUE,   include_amateur_free_throw_lane_lines = TRUE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\ncenter of the court corresponding to (0, 0) — geom_nba","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' include_amateur_free_throw_lane boolean indicating whether include amateur (NCAA) free-throw lane final plot. Default: TRUE include_amateur_free_throw_lane_lines boolean indicating whether include amateur (NCAA) free-throw lane lines final plot. Default: TRUE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass nba_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NBA court, with the\ncenter of the court corresponding to (0, 0) — geom_nba","text":"ggplot2 instance represents regulation NBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_bb.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NCAA basketball court,\nwith the center of the court corresponding to (0, 0) — geom_ncaa_bb","title":"Create a ggplot2 instance that represents a regulation NCAA basketball court,\nwith the center of the court corresponding to (0, 0) — geom_ncaa_bb","text":"Create ggplot2 instance represents regulation NCAA basketball court, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_bb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NCAA basketball court,\nwith the center of the court corresponding to (0, 0) — geom_ncaa_bb","text":"","code":"geom_ncaa_bb(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   include_m_three_point_line = TRUE,   include_w_three_point_line = TRUE,   include_professional_free_throw_lane = FALSE,   include_professional_free_throw_lane_lines = FALSE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_bb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NCAA basketball court,\nwith the center of the court corresponding to (0, 0) — geom_ncaa_bb","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' include_m_three_point_line boolean indicating whether include men's three-point line final plot. Default: TRUE include_w_three_point_line boolean indicating whether include women's three-point line final plot. Default: TRUE include_professional_free_throw_lane boolean indicating whether include professional((W)NBA) free-throw lane final plot. Default: FALSE include_professional_free_throw_lane_lines boolean indicating whether include professional((W)NBA) free-throw lane lines final plot. Default: FALSE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass ncaa_bb_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_bb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NCAA basketball court,\nwith the center of the court corresponding to (0, 0) — geom_ncaa_bb","text":"ggplot2 instance represents regulation NCAA basketball court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_football.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_ncaa_football","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_ncaa_football","text":"Create ggplot2 instance represents regulation NFL field, bottom left corner left-endzone corresponding  (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_football.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_ncaa_football","text":"","code":"geom_ncaa_football(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"yd\",   origin_bottom_left = TRUE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_football.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_ncaa_football","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'yd' origin_bottom_left boolean indicating whether place origin bottom-left corner plot (endline meets sideline). Default: TRUE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass ncaa_football_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_football.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_ncaa_football","text":"ggplot2 instance represents regulation NFL field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_hockey.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NCAA hockey rink, with\nthe center of the rink corresponding to (0, 0) — geom_ncaa_hockey","title":"Create a ggplot2 instance that represents a regulation NCAA hockey rink, with\nthe center of the rink corresponding to (0, 0) — geom_ncaa_hockey","text":"Create ggplot2 instance represents regulation NCAA hockey rink, center rink corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_hockey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NCAA hockey rink, with\nthe center of the rink corresponding to (0, 0) — geom_ncaa_hockey","text":"","code":"geom_ncaa_hockey(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_hockey.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NCAA hockey rink, with\nthe center of the rink corresponding to (0, 0) — geom_ncaa_hockey","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass ncaa_hockey_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_hockey.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NCAA hockey rink, with\nthe center of the rink corresponding to (0, 0) — geom_ncaa_hockey","text":"ggplot2 instance represents regulation NCAA hockey rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_soccer.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NCAA pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_ncaa_soccer","title":"Create a ggplot2 instance that represents a regulation NCAA pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_ncaa_soccer","text":"Create ggplot2 instance represents regulation NCAA pitch, center pitch corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_soccer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NCAA pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_ncaa_soccer","text":"","code":"geom_ncaa_soccer(   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_soccer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NCAA pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_ncaa_soccer","text":"touchline_length entire length touchline (halves). can units, default meters. Default: 120 goal_line_length length goal line. can units, default meters. Default: 90 full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass ncaa_soccer_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_soccer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NCAA pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_ncaa_soccer","text":"ggplot2 instance represents regulation NCAA pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_tennis.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NCAA tennis court, with\nthe center of the net corresponding to (0, 0) — geom_ncaa_tennis","title":"Create a ggplot2 instance that represents a regulation NCAA tennis court, with\nthe center of the net corresponding to (0, 0) — geom_ncaa_tennis","text":"Create ggplot2 instance represents regulation NCAA tennis court, center net corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_tennis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NCAA tennis court, with\nthe center of the net corresponding to (0, 0) — geom_ncaa_tennis","text":"","code":"geom_ncaa_tennis(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_tennis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NCAA tennis court, with\nthe center of the net corresponding to (0, 0) — geom_ncaa_tennis","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'yd' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass ncaa_tennis_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_ncaa_tennis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NCAA tennis court, with\nthe center of the net corresponding to (0, 0) — geom_ncaa_tennis","text":"ggplot2 instance represents regulation NFL field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nfl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_nfl","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_nfl","text":"Create ggplot2 instance represents regulation NFL field, bottom left corner left-endzone corresponding  (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nfl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_nfl","text":"","code":"geom_nfl(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"yd\",   origin_bottom_left = TRUE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nfl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_nfl","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'yd' origin_bottom_left boolean indicating whether place origin bottom-left corner plot (endline meets sideline). Default: TRUE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass nfl_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nfl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NFL field, with the\nbottom left corner of the left-most endzone corresponding to  (0, 0) — geom_nfl","text":"ggplot2 instance represents regulation NFL field","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nhl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NHL rink, with the\ncenter of the rink corresponding to (0, 0) — geom_nhl","title":"Create a ggplot2 instance that represents a regulation NHL rink, with the\ncenter of the rink corresponding to (0, 0) — geom_nhl","text":"Create ggplot2 instance represents regulation NHL rink, center rink corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nhl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NHL rink, with the\ncenter of the rink corresponding to (0, 0) — geom_nhl","text":"","code":"geom_nhl(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nhl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NHL rink, with the\ncenter of the rink corresponding to (0, 0) — geom_nhl","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass nhl_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nhl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NHL rink, with the\ncenter of the rink corresponding to (0, 0) — geom_nhl","text":"ggplot2 instance represents regulation NHL rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwhl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NWHL rink, with the\ncenter of the court corresponding to (0, 0) — geom_nwhl","title":"Create a ggplot2 instance that represents a regulation NWHL rink, with the\ncenter of the court corresponding to (0, 0) — geom_nwhl","text":"Create ggplot2 instance represents regulation NWHL rink, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwhl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NWHL rink, with the\ncenter of the court corresponding to (0, 0) — geom_nwhl","text":"","code":"geom_nwhl(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwhl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NWHL rink, with the\ncenter of the court corresponding to (0, 0) — geom_nwhl","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass nwhl_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwhl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NWHL rink, with the\ncenter of the court corresponding to (0, 0) — geom_nwhl","text":"ggplot2 instance represents regulation NWHL rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwsl.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation NWSL pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_nwsl","title":"Create a ggplot2 instance that represents a regulation NWSL pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_nwsl","text":"Create ggplot2 instance represents regulation NWSL pitch, center pitch corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwsl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation NWSL pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_nwsl","text":"","code":"geom_nwsl(   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwsl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation NWSL pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_nwsl","text":"touchline_length entire length touchline (halves). can units, default meters. Default: 120 goal_line_length length goal line. can units, default meters. Default: 90 full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass nwsl_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_nwsl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation NWSL pitch, with the\ncenter of the pitch corresponding to (0, 0) — geom_nwsl","text":"ggplot2 instance represents regulation NWSL pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_phf.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation PHF rink, with the\ncenter of the court corresponding to (0, 0) — geom_phf","title":"Create a ggplot2 instance that represents a regulation PHF rink, with the\ncenter of the court corresponding to (0, 0) — geom_phf","text":"Create ggplot2 instance represents regulation PHF rink, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_phf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation PHF rink, with the\ncenter of the court corresponding to (0, 0) — geom_phf","text":"","code":"geom_phf(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_phf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation PHF rink, with the\ncenter of the court corresponding to (0, 0) — geom_phf","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass phf_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_phf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation PHF rink, with the\ncenter of the court corresponding to (0, 0) — geom_phf","text":"ggplot2 instance represents regulation PHF rink","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_premier_league.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation Premier League pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_premier_league","title":"Create a ggplot2 instance that represents a regulation Premier League pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_premier_league","text":"Create ggplot2 instance represents regulation Premier League pitch, center pitch corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_premier_league.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation Premier League pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_premier_league","text":"","code":"geom_premier_league(   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"m\",   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_premier_league.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation Premier League pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_premier_league","text":"touchline_length entire length touchline (halves). can units, default meters. Default: 120 goal_line_length length goal line. can units, default meters. Default: 90 full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'm' background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass premier_league_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_premier_league.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation Premier League pitch,\nwith the center of the pitch corresponding to (0, 0) — geom_premier_league","text":"ggplot2 instance represents regulation Premier League pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_soccer.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","title":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","text":"Generate ggplot2 instance containing soccer pitch specified league","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_soccer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","text":"","code":"geom_soccer(   league,   touchline_length = 120,   goal_line_length = 90,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_soccer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","text":"league league draw surface touchline_length length touchline. entire length (halves) pitch. Default: 120 goal_line_length length goal line. Default: 90 full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' ... Additional arguments pass function. colors pass {league}_features_set_colors() function, units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_soccer.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","text":"ggplot2 instance full-surface representation soccer pitch","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_soccer.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a ggplot2 instance containing a soccer pitch for a specified league — geom_soccer","text":"","code":"geom_soccer(league = \"MLS\")  geom_soccer(league = \"PREMIER\", rotate = TRUE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_tennis.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a ggplot2 instance containing a regulation tennis court for a\nspecified league — geom_tennis","title":"Generate a ggplot2 instance containing a regulation tennis court for a\nspecified league — geom_tennis","text":"Generate ggplot2 instance containing regulation tennis court specified league","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_tennis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a ggplot2 instance containing a regulation tennis court for a\nspecified league — geom_tennis","text":"","code":"geom_tennis(   league,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_tennis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a ggplot2 instance containing a regulation tennis court for a\nspecified league — geom_tennis","text":"league league draw surface full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' ... Additional arguments pass function. colors pass {league}_features_set_colors() function, units draw plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_tennis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a ggplot2 instance containing a regulation tennis court for a\nspecified league — geom_tennis","text":"","code":"geom_tennis(league = \"itf\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_wnba.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a ggplot2 instance that represents a regulation WNBA court, with the\ncenter of the court corresponding to (0, 0) — geom_wnba","title":"Create a ggplot2 instance that represents a regulation WNBA court, with the\ncenter of the court corresponding to (0, 0) — geom_wnba","text":"Create ggplot2 instance represents regulation WNBA court, center court corresponding (0, 0)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_wnba.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a ggplot2 instance that represents a regulation WNBA court, with the\ncenter of the court corresponding to (0, 0) — geom_wnba","text":"","code":"geom_wnba(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   unit = \"ft\",   include_amateur_free_throw_lane = TRUE,   include_amateur_free_throw_lane_lines = TRUE,   background_color = NULL,   ... )"},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_wnba.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a ggplot2 instance that represents a regulation WNBA court, with the\ncenter of the court corresponding to (0, 0) — geom_wnba","text":"full_surf boolean indicating whether draw full-surface representation playing surface. Default: TRUE rotate boolean indicating whether surface representation needs rotated. Default: FALSE rotation_dir string indicating direction rotate surface representation. Default: 'ccw' unit string indicating units make plot. Default: 'ft' include_amateur_free_throw_lane boolean indicating whether include amateur (NCAA) free-throw lane final plot. Default: TRUE include_amateur_free_throw_lane_lines boolean indicating whether include amateur (NCAA) free-throw lane lines final plot. Default: TRUE background_color hexadecimal string representing color use plot's background. Default: NULL ... Additional arguments pass function. colors pass wnba_features_set_colors() function","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/geom_wnba.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a ggplot2 instance that represents a regulation WNBA court, with the\ncenter of the court corresponding to (0, 0) — geom_wnba","text":"ggplot2 instance represents regulation WNBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_blue_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the blue line(s) — iihf_feature_blue_line","title":"Generate the data frame for the points that comprise the blue line(s) — iihf_feature_blue_line","text":"Generate data frame points comprise blue line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_blue_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the blue line(s) — iihf_feature_blue_line","text":"","code":"iihf_feature_blue_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_blue_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the blue line(s) — iihf_feature_blue_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_blue_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the blue line(s) — iihf_feature_blue_line","text":"data frame containing points comprise blue line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the boards — iihf_feature_boards","title":"Generate the data frame for the points that comprise the boards — iihf_feature_boards","text":"Generate data frame points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the boards — iihf_feature_boards","text":"","code":"iihf_feature_boards(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the boards — iihf_feature_boards","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the boards — iihf_feature_boards","text":"data frame containing points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_center_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center line — iihf_feature_center_line","title":"Generate the data frame for the points that comprise the center line — iihf_feature_center_line","text":"Generate data frame points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_center_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center line — iihf_feature_center_line","text":"","code":"iihf_feature_center_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_center_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center line — iihf_feature_center_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_center_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center line — iihf_feature_center_line","text":"data frame containing points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff circles — iihf_feature_faceoff_circle","title":"Generate the data frame for the points that comprise the faceoff circles — iihf_feature_faceoff_circle","text":"Generate data frame points comprise faceoff circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff circles — iihf_feature_faceoff_circle","text":"","code":"iihf_feature_faceoff_circle(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff circles — iihf_feature_faceoff_circle","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff circles — iihf_feature_faceoff_circle","text":"data frame containing points comprise faceoff circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff lines — iihf_feature_faceoff_lines","title":"Generate the data frame for the points that comprise the faceoff lines — iihf_feature_faceoff_lines","text":"Generate data frame points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff lines — iihf_feature_faceoff_lines","text":"","code":"iihf_feature_faceoff_lines(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff lines — iihf_feature_faceoff_lines","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff lines — iihf_feature_faceoff_lines","text":"data frame containing points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff spots — iihf_feature_faceoff_spot","title":"Generate the data frame for the points that comprise the faceoff spots — iihf_feature_faceoff_spot","text":"Generate data frame points comprise faceoff spots","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff spots — iihf_feature_faceoff_spot","text":"","code":"iihf_feature_faceoff_spot(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff spots — iihf_feature_faceoff_spot","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_faceoff_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff spots — iihf_feature_faceoff_spot","text":"data frame containing points comprise faceoff spot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — iihf_feature_goal","title":"Generate the data frame for the points that comprise the goal — iihf_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — iihf_feature_goal","text":"","code":"iihf_feature_goal(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — iihf_feature_goal","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — iihf_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal crease — iihf_feature_goal_crease","title":"Generate the data frame for the points that comprise the goal crease — iihf_feature_goal_crease","text":"Generate data frame points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal crease — iihf_feature_goal_crease","text":"","code":"iihf_feature_goal_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal crease — iihf_feature_goal_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal crease — iihf_feature_goal_crease","text":"data frame containing points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — iihf_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — iihf_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — iihf_feature_goal_line","text":"","code":"iihf_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — iihf_feature_goal_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — iihf_feature_goal_line","text":"data frame containing points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_referee_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the referee's crease — iihf_feature_referee_crease","title":"Generate the data frame for the points that comprise the referee's crease — iihf_feature_referee_crease","text":"Generate data frame points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_referee_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the referee's crease — iihf_feature_referee_crease","text":"","code":"iihf_feature_referee_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_referee_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the referee's crease — iihf_feature_referee_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_feature_referee_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the referee's crease — iihf_feature_referee_crease","text":"data frame containing points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an IIHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_iihf() function (or its wrapper geom_hockey()) — iihf_features_set_colors","title":"Generate the list of colors for an IIHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_iihf() function (or its wrapper geom_hockey()) — iihf_features_set_colors","text":"Generate list colors IIHF rink plot. defaults can overwritten supplying names list elements geom_iihf() function (wrapper geom_hockey())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an IIHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_iihf() function (or its wrapper geom_hockey()) — iihf_features_set_colors","text":"","code":"iihf_features_set_colors(   boards_color = \"#000000\",   center_line_color = \"#c8102e\",   blue_line_color = \"#0033a0\",   goal_line_color = \"#c8102e\",   goal_crease_outline_color = \"#c8102e\",   goal_crease_fill_color = \"#41b6e6\",   referee_crease_color = \"#c8102e\",   center_faceoff_spot_color = \"#0033a0\",   faceoff_spot_outer_ring_color = \"#c8102e\",   faceoff_spot_fill_color = \"#c8102e\",   center_faceoff_circle_color = \"#0033a0\",   non_center_faceoff_circle_color = \"#c8102e\",   faceoff_line_color = \"#c8102e\",   goal_color = \"#c8102e\",   goal_fill_color = \"#a5acaf\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an IIHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_iihf() function (or its wrapper geom_hockey()) — iihf_features_set_colors","text":"boards_color hexadecimal string representing color use feature center_line_color hexadecimal string representing color use feature blue_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature goal_crease_outline_color hexadecimal string representing color use feature goal_crease_fill_color hexadecimal string representing color use feature referee_crease_color hexadecimal string representing color use feature center_faceoff_spot_color hexadecimal string representing color use feature faceoff_spot_outer_ring_color hexadecimal string representing color use feature faceoff_spot_fill_color hexadecimal string representing color use feature center_faceoff_circle_color hexadecimal string representing color use feature non_center_faceoff_circle_color hexadecimal string representing color use feature faceoff_line_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature goal_fill_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/iihf_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an IIHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_iihf() function (or its wrapper geom_hockey()) — iihf_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the baseline(s) — itf_feature_baseline","title":"Generate the data frame for the points that comprise the baseline(s) — itf_feature_baseline","text":"Generate data frame points comprise baseline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the baseline(s) — itf_feature_baseline","text":"","code":"itf_feature_baseline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the baseline(s) — itf_feature_baseline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the baseline(s) — itf_feature_baseline","text":"data frame containing points comprise baseline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark(s) — itf_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark(s) — itf_feature_center_mark","text":"Generate data frame points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark(s) — itf_feature_center_mark","text":"","code":"itf_feature_center_mark(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark(s) — itf_feature_center_mark","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark(s) — itf_feature_center_mark","text":"data frame containing points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_service_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center service\nline(s) — itf_feature_center_service_line","title":"Generate the data frame for the points that comprise the center service\nline(s) — itf_feature_center_service_line","text":"Generate data frame points comprise center service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_service_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center service\nline(s) — itf_feature_center_service_line","text":"","code":"itf_feature_center_service_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_service_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center service\nline(s) — itf_feature_center_service_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_center_service_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center service\nline(s) — itf_feature_center_service_line","text":"data frame containing points comprise center service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_court_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court background — itf_feature_court_background","title":"Generate the data frame for the points that comprise the court background — itf_feature_court_background","text":"Generate data frame points comprise court background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_court_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court background — itf_feature_court_background","text":"","code":"itf_feature_court_background(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_court_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court background — itf_feature_court_background","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_court_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court background — itf_feature_court_background","text":"data frame containing points comprise court background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_doubles_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_doubles_sideline","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_doubles_sideline","text":"Generate data frame points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_doubles_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_doubles_sideline","text":"","code":"itf_feature_doubles_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_doubles_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_doubles_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_doubles_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_doubles_sideline","text":"data frame containing points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — itf_feature_net","title":"Generate the data frame for the points that comprise the net — itf_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — itf_feature_net","text":"","code":"itf_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — itf_feature_net","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — itf_feature_net","text":"data frame containing points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_service_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the service line(s) — itf_feature_service_line","title":"Generate the data frame for the points that comprise the service line(s) — itf_feature_service_line","text":"Generate data frame points comprise service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_service_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the service line(s) — itf_feature_service_line","text":"","code":"itf_feature_service_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_service_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the service line(s) — itf_feature_service_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_service_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the service line(s) — itf_feature_service_line","text":"data frame containing points comprise service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_singles_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_singles_sideline","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_singles_sideline","text":"Generate data frame points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_singles_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_singles_sideline","text":"","code":"itf_feature_singles_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_singles_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_singles_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_feature_singles_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the doubles sideline(s) — itf_feature_singles_sideline","text":"data frame containing points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an ITF tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_itf() function (or its wrapper geom_tennis()) — itf_features_set_colors","title":"Generate the list of colors for an ITF tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_itf() function (or its wrapper geom_tennis()) — itf_features_set_colors","text":"Generate list colors ITF tennis court plot. defaults can overwritten supplying names list elements geom_itf() function (wrapper geom_tennis())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an ITF tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_itf() function (or its wrapper geom_tennis()) — itf_features_set_colors","text":"","code":"itf_features_set_colors(   court_background_color = \"#196f0c\",   baseline_color = \"#ffffff\",   doubles_sideline_1_color = \"#ffffff\",   doubles_sideline_2_color = \"#ffffff\",   singles_sideline_1_color = \"#ffffff\",   singles_sideline_2_color = \"#ffffff\",   service_line_color = \"#ffffff\",   center_service_line_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an ITF tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_itf() function (or its wrapper geom_tennis()) — itf_features_set_colors","text":"court_background_color hexadecimal string representing color use feature baseline_color hexadecimal string representing color use feature doubles_sideline_1_color hexadecimal string representing color use feature doubles_sideline_2_color hexadecimal string representing color use feature singles_sideline_1_color hexadecimal string representing color use feature singles_sideline_2_color hexadecimal string representing color use feature service_line_color hexadecimal string representing color use feature center_service_line_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/itf_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an ITF tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_itf() function (or its wrapper geom_tennis()) — itf_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/league_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"Datasets available in this package\nA list of lists (JSON) that associates a league code with a given sport that\nit can create. This data is primarily useful in the caniplot_league()\nfunction, and is intended to be an internal dataset. — league_lookup","title":"Datasets available in this package\nA list of lists (JSON) that associates a league code with a given sport that\nit can create. This data is primarily useful in the caniplot_league()\nfunction, and is intended to be an internal dataset. — league_lookup","text":"Datasets available package list lists (JSON) associates league code given sport can create. data primarily useful caniplot_league() function, intended internal dataset.","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/league_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Datasets available in this package\nA list of lists (JSON) that associates a league code with a given sport that\nit can create. This data is primarily useful in the caniplot_league()\nfunction, and is intended to be an internal dataset. — league_lookup","text":"","code":"league_lookup"},{"path":"https://rossdrucker.github.io/sportyR/reference/league_lookup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Datasets available in this package\nA list of lists (JSON) that associates a league code with a given sport that\nit can create. This data is primarily useful in the caniplot_league()\nfunction, and is intended to be an internal dataset. — league_lookup","text":"object class list length 19.","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/league_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Datasets available in this package\nA list of lists (JSON) that associates a league code with a given sport that\nit can create. This data is primarily useful in the caniplot_league()\nfunction, and is intended to be an internal dataset. — league_lookup","text":"list leagues associated sports list sublist, key-value(s) pairing","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_baselines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the baselines and the\nrunning lane — mlb_feature_baselines","title":"Generate the data frame for the points that comprise the baselines and the\nrunning lane — mlb_feature_baselines","text":"Generate data frame points comprise baselines running lane","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_baselines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the baselines and the\nrunning lane — mlb_feature_baselines","text":"","code":"mlb_feature_baselines()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_baselines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the baselines and the\nrunning lane — mlb_feature_baselines","text":"list data frames containing points comprise baselines running lane","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_bases.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the bases — mlb_feature_bases","title":"Generate the data frame for the points that comprise the bases — mlb_feature_bases","text":"Generate data frame points comprise bases","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_bases.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the bases — mlb_feature_bases","text":"","code":"mlb_feature_bases()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_bases.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the bases — mlb_feature_bases","text":"list data frames containing points comprise bases","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_batters_boxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the batter's boxes and\ncatcher's box — mlb_feature_batters_boxes","title":"Generate the data frame for the points that comprise the batter's boxes and\ncatcher's box — mlb_feature_batters_boxes","text":"Generate data frame points comprise batter's boxes catcher's box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_batters_boxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the batter's boxes and\ncatcher's box — mlb_feature_batters_boxes","text":"","code":"mlb_feature_batters_boxes()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_batters_boxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the batter's boxes and\ncatcher's box — mlb_feature_batters_boxes","text":"list data frames containing points comprise batter's boxes catcher's box added","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_dirt.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the infield dirt and the\ndirt circles around home plate — mlb_feature_infield_dirt","title":"Generate the data frame for the points that comprise the infield dirt and the\ndirt circles around home plate — mlb_feature_infield_dirt","text":"Generate data frame points comprise infield dirt dirt circles around home plate","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_dirt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the infield dirt and the\ndirt circles around home plate — mlb_feature_infield_dirt","text":"","code":"mlb_feature_infield_dirt()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_dirt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the infield dirt and the\ndirt circles around home plate — mlb_feature_infield_dirt","text":"list data frames containing points comprise infield dirt dirt circles around home plate","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the infield grass — mlb_feature_infield_grass","title":"Generate the data frame for the points that comprise the infield grass — mlb_feature_infield_grass","text":"Generate data frame points comprise infield grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the infield grass — mlb_feature_infield_grass","text":"","code":"mlb_feature_infield_grass()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_infield_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the infield grass — mlb_feature_infield_grass","text":"data frame containing points comprise infield grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_mound.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the pitcher's mound and\npitcher's plate — mlb_feature_mound","title":"Generate the data frame for the points that comprise the pitcher's mound and\npitcher's plate — mlb_feature_mound","text":"Generate data frame points comprise pitcher's mound pitcher's plate","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_mound.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the pitcher's mound and\npitcher's plate — mlb_feature_mound","text":"","code":"mlb_feature_mound()"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_feature_mound.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the pitcher's mound and\npitcher's plate — mlb_feature_mound","text":"list data frames containing points comprise pitcher's mound pitcher's plate","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an MLB field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mlb() function (or its wrapper geom_baseball()) — mlb_features_set_colors","title":"Generate the list of colors for an MLB field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mlb() function (or its wrapper geom_baseball()) — mlb_features_set_colors","text":"Generate list colors MLB field plot. defaults can overwritten supplying names list elements geom_mlb() function (wrapper geom_baseball())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an MLB field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mlb() function (or its wrapper geom_baseball()) — mlb_features_set_colors","text":"","code":"mlb_features_set_colors(   infield_dirt_color = \"#9b7653\",   home_dirt_color = \"#9b7653\",   infield_grass_color = \"#395d33\",   mound_color = \"#9b7653\",   pitchers_plate_color = \"#ffffff\",   home_plate_color = \"#ffffff\",   first_base_bag_color = \"#ffffff\",   second_base_bag_color = \"#ffffff\",   third_base_bag_color = \"#ffffff\",   lefty_batters_box_color = \"#ffffff\",   righty_batters_box_color = \"#ffffff\",   catchers_box_color = \"#ffffff\",   rf_line_color = \"#ffffff\",   lf_line_color = \"#ffffff\",   running_lane_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an MLB field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mlb() function (or its wrapper geom_baseball()) — mlb_features_set_colors","text":"infield_dirt_color hexadecimal string representing color use feature home_dirt_color hexadecimal string representing color use feature infield_grass_color hexadecimal string representing color use feature mound_color hexadecimal string representing color use feature pitchers_plate_color hexadecimal string representing color use feature home_plate_color hexadecimal string representing color use feature first_base_bag_color hexadecimal string representing color use feature second_base_bag_color hexadecimal string representing color use feature third_base_bag_color hexadecimal string representing color use feature lefty_batters_box_color hexadecimal string representing color use feature righty_batters_box_color hexadecimal string representing color use feature catchers_box_color hexadecimal string representing color use feature rf_line_color hexadecimal string representing color use feature lf_line_color hexadecimal string representing color use feature running_lane_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mlb_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an MLB field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mlb() function (or its wrapper geom_baseball()) — mlb_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_5.5m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 6-yard box — mls_feature_box_5.5m","title":"Generate the data frame for the points that comprise the 6-yard box — mls_feature_box_5.5m","text":"Generate data frame points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_5.5m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 6-yard box — mls_feature_box_5.5m","text":"","code":"mls_feature_box_5.5m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_5.5m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 6-yard box — mls_feature_box_5.5m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_5.5m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 6-yard box — mls_feature_box_5.5m","text":"data frame containing points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_9.15m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 18-yard box — mls_feature_box_9.15m","title":"Generate the data frame for the points that comprise the 18-yard box — mls_feature_box_9.15m","text":"Generate data frame points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_9.15m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 18-yard box — mls_feature_box_9.15m","text":"","code":"mls_feature_box_9.15m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_9.15m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 18-yard box — mls_feature_box_9.15m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_box_9.15m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 18-yard box — mls_feature_box_9.15m","text":"data frame containing points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — mls_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — mls_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — mls_feature_center_circle","text":"","code":"mls_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — mls_feature_center_circle","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — mls_feature_center_circle","text":"data frame containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark — mls_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark — mls_feature_center_mark","text":"Generate data frame points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark — mls_feature_center_mark","text":"","code":"mls_feature_center_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark — mls_feature_center_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark — mls_feature_center_mark","text":"data frame containing points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_corner_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the corner circle — mls_feature_corner_circle","title":"Generate the data frame for the points that comprise the corner circle — mls_feature_corner_circle","text":"Generate data frame points comprise corner circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_corner_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the corner circle — mls_feature_corner_circle","text":"","code":"mls_feature_corner_circle(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_corner_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the corner circle — mls_feature_corner_circle","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_corner_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the corner circle — mls_feature_corner_circle","text":"list data frames containing points comprise corner quarter-circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — mls_feature_goal","title":"Generate the data frame for the points that comprise the goal — mls_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — mls_feature_goal","text":"","code":"mls_feature_goal(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — mls_feature_goal","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — mls_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal lines — mls_feature_goal_line","title":"Generate the data frame for the points that comprise the goal lines — mls_feature_goal_line","text":"Generate data frame points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal lines — mls_feature_goal_line","text":"","code":"mls_feature_goal_line(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal lines — mls_feature_goal_line","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal lines — mls_feature_goal_line","text":"data frame containing points comprise goal line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — mls_feature_grass","title":"Generate the data frame for the points that comprise the grass background — mls_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — mls_feature_grass","text":"","code":"mls_feature_grass(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — mls_feature_grass","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — mls_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_halfway_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the halfway line — mls_feature_halfway_line","title":"Generate the data frame for the points that comprise the halfway line — mls_feature_halfway_line","text":"Generate data frame points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_halfway_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the halfway line — mls_feature_halfway_line","text":"","code":"mls_feature_halfway_line(   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_halfway_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the halfway line — mls_feature_halfway_line","text":"goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_halfway_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the halfway line — mls_feature_halfway_line","text":"data frame containing points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty arc — mls_feature_penalty_arc","title":"Generate the data frame for the points that comprise the penalty arc — mls_feature_penalty_arc","text":"Generate data frame points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty arc — mls_feature_penalty_arc","text":"","code":"mls_feature_penalty_arc(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty arc — mls_feature_penalty_arc","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty arc — mls_feature_penalty_arc","text":"data frame containing points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty mark — mls_feature_penalty_mark","title":"Generate the data frame for the points that comprise the penalty mark — mls_feature_penalty_mark","text":"Generate data frame points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty mark — mls_feature_penalty_mark","text":"","code":"mls_feature_penalty_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty mark — mls_feature_penalty_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_penalty_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty mark — mls_feature_penalty_mark","text":"data frame containing points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_touchlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the touchlines — mls_feature_touchlines","title":"Generate the data frame for the points that comprise the touchlines — mls_feature_touchlines","text":"Generate data frame points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_touchlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the touchlines — mls_feature_touchlines","text":"","code":"mls_feature_touchlines(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_touchlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the touchlines — mls_feature_touchlines","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_feature_touchlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the touchlines — mls_feature_touchlines","text":"list data frames containing points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an MLS pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mls() function (or its wrapper geom_soccer()) — mls_features_set_colors","title":"Generate the list of colors for an MLS pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mls() function (or its wrapper geom_soccer()) — mls_features_set_colors","text":"Generate list colors MLS pitch plot. defaults can overwritten supplying names list elements geom_mls() function (wrapper geom_soccer())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an MLS pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mls() function (or its wrapper geom_soccer()) — mls_features_set_colors","text":"","code":"mls_features_set_colors(   grass_color = \"#196f0c\",   touchline_1_color = \"#ffffff\",   touchline_2_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   halfway_line_color = \"#ffffff\",   center_circle_color = \"#ffffff\",   corner_circle_1_color = \"#ffffff\",   corner_circle_2_color = \"#ffffff\",   corner_circle_3_color = \"#ffffff\",   corner_circle_4_color = \"#ffffff\",   box_5.5m_color = \"#ffffff\",   box_9.15m_color = \"#ffffff\",   penalty_arc_color = \"#ffffff\",   penalty_mark_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   goal_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an MLS pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mls() function (or its wrapper geom_soccer()) — mls_features_set_colors","text":"grass_color hexadecimal string representing color use feature touchline_1_color hexadecimal string representing color use feature touchline_2_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature halfway_line_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature corner_circle_1_color hexadecimal string representing color use feature corner_circle_2_color hexadecimal string representing color use feature corner_circle_3_color hexadecimal string representing color use feature corner_circle_4_color hexadecimal string representing color use feature box_5.5m_color hexadecimal string representing color use feature box_9.15m_color hexadecimal string representing color use feature penalty_arc_color hexadecimal string representing color use feature penalty_mark_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/mls_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an MLS pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_mls() function (or its wrapper geom_soccer()) — mls_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_backboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the backboard — nba_feature_backboard","title":"Generate the data frame for the points that comprise the backboard — nba_feature_backboard","text":"Generate data frame points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_backboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the backboard — nba_feature_backboard","text":"","code":"nba_feature_backboard(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_backboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the backboard — nba_feature_backboard","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_backboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the backboard — nba_feature_backboard","text":"data frame containing points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_basket_ring.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the basket ring — nba_feature_basket_ring","title":"Generate the data frame for the points that comprise the basket ring — nba_feature_basket_ring","text":"Generate data frame points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_basket_ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the basket ring — nba_feature_basket_ring","text":"","code":"nba_feature_basket_ring(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_basket_ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the basket ring — nba_feature_basket_ring","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_basket_ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the basket ring — nba_feature_basket_ring","text":"data frame containing points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_center_circles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circles — nba_feature_center_circles","title":"Generate the data frame for the points that comprise the center circles — nba_feature_center_circles","text":"Generate data frame points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_center_circles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circles — nba_feature_center_circles","text":"","code":"nba_feature_center_circles(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_center_circles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circles — nba_feature_center_circles","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_center_circles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circles — nba_feature_center_circles","text":"list data frames containing points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_apron.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court apron — nba_feature_court_apron","title":"Generate the data frame for the points that comprise the court apron — nba_feature_court_apron","text":"Generate data frame points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_apron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court apron — nba_feature_court_apron","text":"","code":"nba_feature_court_apron(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_apron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court apron — nba_feature_court_apron","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_apron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court apron — nba_feature_court_apron","text":"data frame containing points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_bground.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise a regulation NBA court — nba_feature_court_bground","title":"Generate the data frame for the points that comprise a regulation NBA court — nba_feature_court_bground","text":"Generate data frame points comprise regulation NBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_bground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise a regulation NBA court — nba_feature_court_bground","text":"","code":"nba_feature_court_bground(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_bground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise a regulation NBA court — nba_feature_court_bground","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_court_bground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise a regulation NBA court — nba_feature_court_bground","text":"data frame containing points comprise court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_division_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the division line — nba_feature_division_line","title":"Generate the data frame for the points that comprise the division line — nba_feature_division_line","text":"Generate data frame points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_division_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the division line — nba_feature_division_line","text":"","code":"nba_feature_division_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_division_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the division line — nba_feature_division_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_division_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the division line — nba_feature_division_line","text":"data frame containing points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the end lines — nba_feature_endline","title":"Generate the data frame for the points that comprise the end lines — nba_feature_endline","text":"Generate data frame points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the end lines — nba_feature_endline","text":"","code":"nba_feature_endline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the end lines — nba_feature_endline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the end lines — nba_feature_endline","text":"data frame containing points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_dashed_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — nba_feature_free_throw_dashed_semi_circle","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — nba_feature_free_throw_dashed_semi_circle","text":"Generate data frames points comprise dashed part free-throw circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_dashed_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — nba_feature_free_throw_dashed_semi_circle","text":"","code":"nba_feature_free_throw_dashed_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_dashed_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — nba_feature_free_throw_dashed_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_dashed_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — nba_feature_free_throw_dashed_semi_circle","text":"list data frames containing points comprise dashed part free-throw circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — nba_feature_free_throw_lane","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — nba_feature_free_throw_lane","text":"Generate data frames points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — nba_feature_free_throw_lane","text":"","code":"nba_feature_free_throw_lane(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — nba_feature_free_throw_lane","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — nba_feature_free_throw_lane","text":"list data frames containing points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — nba_feature_free_throw_lane_lines","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — nba_feature_free_throw_lane_lines","text":"Generate data frames points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — nba_feature_free_throw_lane_lines","text":"","code":"nba_feature_free_throw_lane_lines(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — nba_feature_free_throw_lane_lines","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_lane_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — nba_feature_free_throw_lane_lines","text":"list data frames containing points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — nba_feature_free_throw_semi_circle","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — nba_feature_free_throw_semi_circle","text":"Generate data frames points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — nba_feature_free_throw_semi_circle","text":"","code":"nba_feature_free_throw_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — nba_feature_free_throw_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_free_throw_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — nba_feature_free_throw_semi_circle","text":"list data frame containing points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_lower_defensive_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the lower defensive box — nba_feature_lower_defensive_box","title":"Generate the data frames for the points that comprise the lower defensive box — nba_feature_lower_defensive_box","text":"Generate data frames points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_lower_defensive_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the lower defensive box — nba_feature_lower_defensive_box","text":"","code":"nba_feature_lower_defensive_box(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_lower_defensive_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the lower defensive box — nba_feature_lower_defensive_box","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_lower_defensive_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the lower defensive box — nba_feature_lower_defensive_box","text":"data frame containing points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — nba_feature_net","title":"Generate the data frame for the points that comprise the net — nba_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — nba_feature_net","text":"","code":"nba_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — nba_feature_net","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — nba_feature_net","text":"data frame containing points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_restricted_area_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — nba_feature_restricted_area_arc","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — nba_feature_restricted_area_arc","text":"Generate data frame points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_restricted_area_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — nba_feature_restricted_area_arc","text":"","code":"nba_feature_restricted_area_arc(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_restricted_area_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — nba_feature_restricted_area_arc","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_restricted_area_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — nba_feature_restricted_area_arc","text":"data frame containing points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — nba_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — nba_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — nba_feature_sideline","text":"","code":"nba_feature_sideline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — nba_feature_sideline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — nba_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_substitution_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the substitution area — nba_feature_substitution_area","title":"Generate the data frame for the points that comprise the substitution area — nba_feature_substitution_area","text":"Generate data frame points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_substitution_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the substitution area — nba_feature_substitution_area","text":"","code":"nba_feature_substitution_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_substitution_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the substitution area — nba_feature_substitution_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_substitution_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the substitution area — nba_feature_substitution_area","text":"data frame containing points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_team_bench.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the team bench — nba_feature_team_bench","title":"Generate the data frames for the points that comprise the team bench — nba_feature_team_bench","text":"Generate data frames points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_team_bench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the team bench — nba_feature_team_bench","text":"","code":"nba_feature_team_bench(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_team_bench.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the team bench — nba_feature_team_bench","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_team_bench.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the team bench — nba_feature_team_bench","text":"list data frames containing points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_three_point_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — nba_feature_three_point_line","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — nba_feature_three_point_line","text":"Generate data frame points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_three_point_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — nba_feature_three_point_line","text":"","code":"nba_feature_three_point_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_three_point_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — nba_feature_three_point_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_feature_three_point_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — nba_feature_three_point_line","text":"list data frames containing points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nba() function (or its wrapper geom_basketball()) — nba_features_set_colors","title":"Generate the list of colors for an NBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nba() function (or its wrapper geom_basketball()) — nba_features_set_colors","text":"Generate list colors NBA court plot. defaults can overwritten supplying names list elements geom_nba() function (wrapper geom_basketball())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nba() function (or its wrapper geom_basketball()) — nba_features_set_colors","text":"","code":"nba_features_set_colors(   court_background_color = \"#d2ab6f\",   inner_center_circle_color = \"#000000\",   outer_center_circle_color = \"#000000\",   division_line_color = \"#000000\",   endline_color = \"#000000\",   sideline_color = \"#000000\",   team_bench_color = \"#000000\",   substitution_area_color = \"#000000\",   court_apron_color = \"#d2ab6f\",   three_point_line_color = \"#000000\",   two_point_range_color = \"#d2ab6f\",   professional_free_throw_lane_color = \"#000000\",   professional_painted_area_color = \"#d2ab6f\",   amateur_free_throw_lane_color = \"#000000\",   amateur_painted_area_color = \"#d2ab6f\",   professional_free_throw_lane_lines_color = \"#000000\",   amateur_free_throw_lane_lines_color = \"#000000\",   free_throw_semi_circle_line_color = \"#000000\",   free_throw_semi_circle_fill_color = \"#d2ab6f\",   free_throw_dashed_semi_circle_color = \"#000000\",   lower_defensive_box_color = \"#000000\",   restricted_area_arc_color = \"#000000\",   backboard_color = \"#000000\",   basket_ring_color = \"#000000\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nba() function (or its wrapper geom_basketball()) — nba_features_set_colors","text":"court_background_color hexadecimal string representing color use feature inner_center_circle_color hexadecimal string representing color use feature outer_center_circle_color hexadecimal string representing color use feature division_line_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature sideline_color hexadecimal string representing color use feature team_bench_color hexadecimal string representing color use feature substitution_area_color hexadecimal string representing color use feature court_apron_color hexadecimal string representing color use feature three_point_line_color hexadecimal string representing color use feature two_point_range_color hexadecimal string representing color use feature professional_free_throw_lane_color hexadecimal string representing color use feature professional_painted_area_color hexadecimal string representing color use feature amateur_free_throw_lane_color hexadecimal string representing color use feature amateur_painted_area_color hexadecimal string representing color use feature professional_free_throw_lane_lines_color hexadecimal string representing color use feature amateur_free_throw_lane_lines_color hexadecimal string representing color use feature free_throw_semi_circle_line_color hexadecimal string representing color use feature free_throw_semi_circle_fill_color hexadecimal string representing color use feature free_throw_dashed_semi_circle_color hexadecimal string representing color use feature lower_defensive_box_color hexadecimal string representing color use feature restricted_area_arc_color hexadecimal string representing color use feature backboard_color hexadecimal string representing color use feature basket_ring_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nba_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nba() function (or its wrapper geom_basketball()) — nba_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_backboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_backboard","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_backboard","text":"Generate data frame points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_backboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_backboard","text":"","code":"ncaa_bb_feature_backboard(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_backboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_backboard","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_backboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_backboard","text":"data frame containing points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_basket_ring.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the basket ring — ncaa_bb_feature_basket_ring","title":"Generate the data frame for the points that comprise the basket ring — ncaa_bb_feature_basket_ring","text":"Generate data frame points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_basket_ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the basket ring — ncaa_bb_feature_basket_ring","text":"","code":"ncaa_bb_feature_basket_ring(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_basket_ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the basket ring — ncaa_bb_feature_basket_ring","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_basket_ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the basket ring — ncaa_bb_feature_basket_ring","text":"data frame containing points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — ncaa_bb_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — ncaa_bb_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — ncaa_bb_feature_center_circle","text":"","code":"ncaa_bb_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — ncaa_bb_feature_center_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — ncaa_bb_feature_center_circle","text":"list data frames containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_apron.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court apron — ncaa_bb_feature_court_apron","title":"Generate the data frame for the points that comprise the court apron — ncaa_bb_feature_court_apron","text":"Generate data frame points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_apron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court apron — ncaa_bb_feature_court_apron","text":"","code":"ncaa_bb_feature_court_apron(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_apron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court apron — ncaa_bb_feature_court_apron","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_apron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court apron — ncaa_bb_feature_court_apron","text":"data frame containing points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_bground.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise a regulation NCAA\nbasketball court — ncaa_bb_feature_court_bground","title":"Generate the data frame for the points that comprise a regulation NCAA\nbasketball court — ncaa_bb_feature_court_bground","text":"Generate data frame points comprise regulation NCAA basketball court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_bground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise a regulation NCAA\nbasketball court — ncaa_bb_feature_court_bground","text":"","code":"ncaa_bb_feature_court_bground(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_bground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise a regulation NCAA\nbasketball court — ncaa_bb_feature_court_bground","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_court_bground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise a regulation NCAA\nbasketball court — ncaa_bb_feature_court_bground","text":"data frame containing points comprise court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_division_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the division line — ncaa_bb_feature_division_line","title":"Generate the data frame for the points that comprise the division line — ncaa_bb_feature_division_line","text":"Generate data frame points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_division_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the division line — ncaa_bb_feature_division_line","text":"","code":"ncaa_bb_feature_division_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_division_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the division line — ncaa_bb_feature_division_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_division_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the division line — ncaa_bb_feature_division_line","text":"data frame containing points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the end lines — ncaa_bb_feature_endline","title":"Generate the data frame for the points that comprise the end lines — ncaa_bb_feature_endline","text":"Generate data frame points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the end lines — ncaa_bb_feature_endline","text":"","code":"ncaa_bb_feature_endline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the end lines — ncaa_bb_feature_endline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the end lines — ncaa_bb_feature_endline","text":"data frame containing points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — ncaa_bb_feature_free_throw_lane","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — ncaa_bb_feature_free_throw_lane","text":"Generate data frames points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — ncaa_bb_feature_free_throw_lane","text":"","code":"ncaa_bb_feature_free_throw_lane(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — ncaa_bb_feature_free_throw_lane","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — ncaa_bb_feature_free_throw_lane","text":"list data frames containing points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — ncaa_bb_feature_free_throw_lane_lines","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — ncaa_bb_feature_free_throw_lane_lines","text":"Generate data frames points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — ncaa_bb_feature_free_throw_lane_lines","text":"","code":"ncaa_bb_feature_free_throw_lane_lines(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — ncaa_bb_feature_free_throw_lane_lines","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_lane_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — ncaa_bb_feature_free_throw_lane_lines","text":"list data frames containing points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — ncaa_bb_feature_free_throw_semi_circle","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — ncaa_bb_feature_free_throw_semi_circle","text":"Generate data frames points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — ncaa_bb_feature_free_throw_semi_circle","text":"","code":"ncaa_bb_feature_free_throw_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — ncaa_bb_feature_free_throw_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_free_throw_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — ncaa_bb_feature_free_throw_semi_circle","text":"list data frame containing points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_lower_defensive_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the lower defensive box — ncaa_bb_feature_lower_defensive_box","title":"Generate the data frames for the points that comprise the lower defensive box — ncaa_bb_feature_lower_defensive_box","text":"Generate data frames points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_lower_defensive_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the lower defensive box — ncaa_bb_feature_lower_defensive_box","text":"","code":"ncaa_bb_feature_lower_defensive_box(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_lower_defensive_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the lower defensive box — ncaa_bb_feature_lower_defensive_box","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_lower_defensive_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the lower defensive box — ncaa_bb_feature_lower_defensive_box","text":"data frame containing points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — ncaa_bb_feature_net","title":"Generate the data frame for the points that comprise the net — ncaa_bb_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — ncaa_bb_feature_net","text":"","code":"ncaa_bb_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — ncaa_bb_feature_net","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — ncaa_bb_feature_net","text":"data frame containing points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_restricted_area_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_restricted_area_arc","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_restricted_area_arc","text":"Generate data frame points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_restricted_area_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_restricted_area_arc","text":"","code":"ncaa_bb_feature_restricted_area_arc(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_restricted_area_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_restricted_area_arc","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_restricted_area_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — ncaa_bb_feature_restricted_area_arc","text":"data frame containing points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the sidelines — ncaa_bb_feature_sideline","title":"Generate the data frames for the points that comprise the sidelines — ncaa_bb_feature_sideline","text":"Generate data frames points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the sidelines — ncaa_bb_feature_sideline","text":"","code":"ncaa_bb_feature_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the sidelines — ncaa_bb_feature_sideline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the sidelines — ncaa_bb_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_substitution_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the substitution area — ncaa_bb_feature_substitution_area","title":"Generate the data frame for the points that comprise the substitution area — ncaa_bb_feature_substitution_area","text":"Generate data frame points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_substitution_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the substitution area — ncaa_bb_feature_substitution_area","text":"","code":"ncaa_bb_feature_substitution_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_substitution_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the substitution area — ncaa_bb_feature_substitution_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_substitution_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the substitution area — ncaa_bb_feature_substitution_area","text":"data frame containing points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_team_bench.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the team bench — ncaa_bb_feature_team_bench","title":"Generate the data frames for the points that comprise the team bench — ncaa_bb_feature_team_bench","text":"Generate data frames points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_team_bench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the team bench — ncaa_bb_feature_team_bench","text":"","code":"ncaa_bb_feature_team_bench(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_team_bench.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the team bench — ncaa_bb_feature_team_bench","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_team_bench.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the team bench — ncaa_bb_feature_team_bench","text":"list data frames containing points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_three_point_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — ncaa_bb_feature_three_point_line","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — ncaa_bb_feature_three_point_line","text":"Generate data frame points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_three_point_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — ncaa_bb_feature_three_point_line","text":"","code":"ncaa_bb_feature_three_point_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_three_point_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — ncaa_bb_feature_three_point_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_feature_three_point_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — ncaa_bb_feature_three_point_line","text":"list data frames containing points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an ncaa_bb court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_bb() function (or its wrapper geom_basketball()) — ncaa_bb_features_set_colors","title":"Generate the list of colors for an ncaa_bb court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_bb() function (or its wrapper geom_basketball()) — ncaa_bb_features_set_colors","text":"Generate list colors ncaa_bb court plot. defaults can overwritten supplying names list elements geom_ncaa_bb() function (wrapper geom_basketball())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an ncaa_bb court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_bb() function (or its wrapper geom_basketball()) — ncaa_bb_features_set_colors","text":"","code":"ncaa_bb_features_set_colors(   court_background_color = \"#d2ab6f\",   center_circle_color = \"#000000\",   division_line_color = \"#000000\",   endline_color = \"#000000\",   sideline_color = \"#000000\",   team_bench_color = \"#000000\",   substitution_area_color = \"#000000\",   court_apron_color = \"#d2ab6f\",   m_three_point_line_color = \"#000000\",   w_three_point_line_color = \"#000000\",   m_two_point_range_color = \"#d2ab6f\",   w_two_point_range_color = \"#d2ab6f\",   professional_free_throw_lane_color = \"#000000\",   professional_painted_area_color = \"#d2ab6f\",   amateur_free_throw_lane_color = \"#000000\",   amateur_painted_area_color = \"#d2ab6f\",   professional_free_throw_lane_lines_color = \"#000000\",   amateur_free_throw_lane_lines_color = \"#000000\",   free_throw_semi_circle_line_color = \"#000000\",   free_throw_semi_circle_fill_color = \"#d2ab6f\",   lower_defensive_box_color = \"#000000\",   restricted_area_arc_color = \"#000000\",   backboard_color = \"#000000\",   basket_ring_color = \"#000000\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an ncaa_bb court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_bb() function (or its wrapper geom_basketball()) — ncaa_bb_features_set_colors","text":"court_background_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature division_line_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature sideline_color hexadecimal string representing color use feature team_bench_color hexadecimal string representing color use feature substitution_area_color hexadecimal string representing color use feature court_apron_color hexadecimal string representing color use feature m_three_point_line_color hexadecimal string representing color use feature w_three_point_line_color hexadecimal string representing color use feature m_two_point_range_color hexadecimal string representing color use feature w_two_point_range_color hexadecimal string representing color use feature professional_free_throw_lane_color hexadecimal string representing color use feature professional_painted_area_color hexadecimal string representing color use feature amateur_free_throw_lane_color hexadecimal string representing color use feature amateur_painted_area_color hexadecimal string representing color use feature professional_free_throw_lane_lines_color hexadecimal string representing color use feature amateur_free_throw_lane_lines_color hexadecimal string representing color use feature free_throw_semi_circle_line_color hexadecimal string representing color use feature free_throw_semi_circle_fill_color hexadecimal string representing color use feature lower_defensive_box_color hexadecimal string representing color use feature restricted_area_arc_color hexadecimal string representing color use feature backboard_color hexadecimal string representing color use feature basket_ring_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_bb_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an ncaa_bb court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_bb() function (or its wrapper geom_basketball()) — ncaa_bb_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the directional arrows — ncaa_football_feature_directional_arrows","title":"Generate the data frame for the points that comprise the directional arrows — ncaa_football_feature_directional_arrows","text":"Generate data frame points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the directional arrows — ncaa_football_feature_directional_arrows","text":"","code":"ncaa_football_feature_directional_arrows(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the directional arrows — ncaa_football_feature_directional_arrows","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the directional arrows — ncaa_football_feature_directional_arrows","text":"data frame contains points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the directional arrows.\nThis function is fed into the ncaa_football_feature_directional_arrows()\nfunction below and helps to optimize performance — ncaa_football_feature_directional_arrows_df_maker","title":"Generate the data frames for the points that comprise the directional arrows.\nThis function is fed into the ncaa_football_feature_directional_arrows()\nfunction below and helps to optimize performance — ncaa_football_feature_directional_arrows_df_maker","text":"Generate data frames points comprise directional arrows. function fed ncaa_football_feature_directional_arrows() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the directional arrows.\nThis function is fed into the ncaa_football_feature_directional_arrows()\nfunction below and helps to optimize performance — ncaa_football_feature_directional_arrows_df_maker","text":"","code":"ncaa_football_feature_directional_arrows_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   lower = TRUE )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the directional arrows.\nThis function is fed into the ncaa_football_feature_directional_arrows()\nfunction below and helps to optimize performance — ncaa_football_feature_directional_arrows_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' lower boolean indicating whether return lower directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_directional_arrows_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the directional arrows.\nThis function is fed into the ncaa_football_feature_directional_arrows()\nfunction below and helps to optimize performance — ncaa_football_feature_directional_arrows_df_maker","text":"data frame (list data frames) contain coordinates directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the endline — ncaa_football_feature_endline","title":"Generate the data frame for the points that comprise the endline — ncaa_football_feature_endline","text":"Generate data frame points comprise endline","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the endline — ncaa_football_feature_endline","text":"","code":"ncaa_football_feature_endline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the endline — ncaa_football_feature_endline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the endline — ncaa_football_feature_endline","text":"data frame containing points comprise endlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — ncaa_football_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — ncaa_football_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — ncaa_football_feature_goal_line","text":"","code":"ncaa_football_feature_goal_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — ncaa_football_feature_goal_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — ncaa_football_feature_goal_line","text":"data frame containing points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — ncaa_football_feature_grass","title":"Generate the data frame for the points that comprise the grass background — ncaa_football_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — ncaa_football_feature_grass","text":"","code":"ncaa_football_feature_grass(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — ncaa_football_feature_grass","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — ncaa_football_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — ncaa_football_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — ncaa_football_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — ncaa_football_feature_sideline","text":"","code":"ncaa_football_feature_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — ncaa_football_feature_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — ncaa_football_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_try_markings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the try lines — ncaa_football_feature_try_markings","title":"Generate the data frame for the points that comprise the try lines — ncaa_football_feature_try_markings","text":"Generate data frame points comprise try lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_try_markings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the try lines — ncaa_football_feature_try_markings","text":"","code":"ncaa_football_feature_try_markings(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_try_markings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the try lines — ncaa_football_feature_try_markings","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_try_markings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the try lines — ncaa_football_feature_try_markings","text":"list data frames containing points comprise try markings","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the yard lines — ncaa_football_feature_yard_markings","title":"Generate the data frame for the points that comprise the yard lines — ncaa_football_feature_yard_markings","text":"Generate data frame points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the yard lines — ncaa_football_feature_yard_markings","text":"","code":"ncaa_football_feature_yard_markings(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the yard lines — ncaa_football_feature_yard_markings","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the yard lines — ncaa_football_feature_yard_markings","text":"data frame containing points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the ncaa_football_feature_yard_markings() function below\nand helps to optimize performance — ncaa_football_feature_yard_markings_df_maker","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the ncaa_football_feature_yard_markings() function below\nand helps to optimize performance — ncaa_football_feature_yard_markings_df_maker","text":"Generate data frames points comprise yard lines. function fed ncaa_football_feature_yard_markings() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the ncaa_football_feature_yard_markings() function below\nand helps to optimize performance — ncaa_football_feature_yard_markings_df_maker","text":"","code":"ncaa_football_feature_yard_markings_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the ncaa_football_feature_yard_markings() function below\nand helps to optimize performance — ncaa_football_feature_yard_markings_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_markings_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the ncaa_football_feature_yard_markings() function below\nand helps to optimize performance — ncaa_football_feature_yard_markings_df_maker","text":"data frame (list data frames) contain coordinates yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that will become the yard marking\nnumbers — ncaa_football_feature_yard_numbers","title":"Generate the data frame for the points that will become the yard marking\nnumbers — ncaa_football_feature_yard_numbers","text":"Generate data frame points become yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that will become the yard marking\nnumbers — ncaa_football_feature_yard_numbers","text":"","code":"ncaa_football_feature_yard_numbers(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that will become the yard marking\nnumbers — ncaa_football_feature_yard_numbers","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_feature_yard_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that will become the yard marking\nnumbers — ncaa_football_feature_yard_numbers","text":"data frame contains information needed add yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_football() function (or its wrapper geom_football()) — ncaa_football_features_set_colors","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_football() function (or its wrapper geom_football()) — ncaa_football_features_set_colors","text":"Generate list colors NFL field plot. defaults can overwritten supplying names list elements geom_ncaa_football() function (wrapper geom_football())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_football() function (or its wrapper geom_football()) — ncaa_football_features_set_colors","text":"","code":"ncaa_football_features_set_colors(   grass_color = \"#196f0c\",   sideline_1_color = \"#ffffff\",   sideline_2_color = \"#ffffff\",   endline_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   yard_markings_color = \"#ffffff\",   try_marking_color = \"#ffffff\",   directional_arrows_color = \"#ffffff\",   yard_numbers_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_football() function (or its wrapper geom_football()) — ncaa_football_features_set_colors","text":"grass_color hexadecimal string representing color use feature sideline_1_color hexadecimal string representing color use feature sideline_2_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature yard_markings_color hexadecimal string representing color use feature try_marking_color hexadecimal string representing color use feature directional_arrows_color hexadecimal string representing color use feature yard_numbers_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_football_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_football() function (or its wrapper geom_football()) — ncaa_football_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_blue_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the blue line(s) — ncaa_hockey_feature_blue_line","title":"Generate the data frame for the points that comprise the blue line(s) — ncaa_hockey_feature_blue_line","text":"Generate data frame points comprise blue line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_blue_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the blue line(s) — ncaa_hockey_feature_blue_line","text":"","code":"ncaa_hockey_feature_blue_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_blue_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the blue line(s) — ncaa_hockey_feature_blue_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_blue_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the blue line(s) — ncaa_hockey_feature_blue_line","text":"data frame containing points comprise blue line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the boards — ncaa_hockey_feature_boards","title":"Generate the data frame for the points that comprise the boards — ncaa_hockey_feature_boards","text":"Generate data frame points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the boards — ncaa_hockey_feature_boards","text":"","code":"ncaa_hockey_feature_boards(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the boards — ncaa_hockey_feature_boards","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the boards — ncaa_hockey_feature_boards","text":"data frame containing points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_center_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the dataframe for the points that comprise the center line — ncaa_hockey_feature_center_line","title":"Generate the dataframe for the points that comprise the center line — ncaa_hockey_feature_center_line","text":"Generate dataframe points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_center_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the dataframe for the points that comprise the center line — ncaa_hockey_feature_center_line","text":"","code":"ncaa_hockey_feature_center_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_center_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the dataframe for the points that comprise the center line — ncaa_hockey_feature_center_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_center_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the dataframe for the points that comprise the center line — ncaa_hockey_feature_center_line","text":"data frame containing points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff circles — ncaa_hockey_feature_faceoff_circle","title":"Generate the data frame for the points that comprise the faceoff circles — ncaa_hockey_feature_faceoff_circle","text":"Generate data frame points comprise faceoff circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff circles — ncaa_hockey_feature_faceoff_circle","text":"","code":"ncaa_hockey_feature_faceoff_circle(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff circles — ncaa_hockey_feature_faceoff_circle","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff circles — ncaa_hockey_feature_faceoff_circle","text":"data frame containing points comprise faceoff circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff lines — ncaa_hockey_feature_faceoff_lines","title":"Generate the data frame for the points that comprise the faceoff lines — ncaa_hockey_feature_faceoff_lines","text":"Generate data frame points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff lines — ncaa_hockey_feature_faceoff_lines","text":"","code":"ncaa_hockey_feature_faceoff_lines(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff lines — ncaa_hockey_feature_faceoff_lines","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff lines — ncaa_hockey_feature_faceoff_lines","text":"data frame containing points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff spots — ncaa_hockey_feature_faceoff_spot","title":"Generate the data frame for the points that comprise the faceoff spots — ncaa_hockey_feature_faceoff_spot","text":"Generate data frame points comprise faceoff spots","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff spots — ncaa_hockey_feature_faceoff_spot","text":"","code":"ncaa_hockey_feature_faceoff_spot(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff spots — ncaa_hockey_feature_faceoff_spot","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_faceoff_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff spots — ncaa_hockey_feature_faceoff_spot","text":"data frame containing points comprise faceoff spot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — ncaa_hockey_feature_goal","title":"Generate the data frame for the points that comprise the goal — ncaa_hockey_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — ncaa_hockey_feature_goal","text":"","code":"ncaa_hockey_feature_goal(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — ncaa_hockey_feature_goal","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — ncaa_hockey_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal crease — ncaa_hockey_feature_goal_crease","title":"Generate the data frame for the points that comprise the goal crease — ncaa_hockey_feature_goal_crease","text":"Generate data frame points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal crease — ncaa_hockey_feature_goal_crease","text":"","code":"ncaa_hockey_feature_goal_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal crease — ncaa_hockey_feature_goal_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal crease — ncaa_hockey_feature_goal_crease","text":"data frame containing points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — ncaa_hockey_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — ncaa_hockey_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — ncaa_hockey_feature_goal_line","text":"","code":"ncaa_hockey_feature_goal_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — ncaa_hockey_feature_goal_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — ncaa_hockey_feature_goal_line","text":"data frame containing points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_referee_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the referee's crease — ncaa_hockey_feature_referee_crease","title":"Generate the data frame for the points that comprise the referee's crease — ncaa_hockey_feature_referee_crease","text":"Generate data frame points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_referee_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the referee's crease — ncaa_hockey_feature_referee_crease","text":"","code":"ncaa_hockey_feature_referee_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_referee_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the referee's crease — ncaa_hockey_feature_referee_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_feature_referee_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the referee's crease — ncaa_hockey_feature_referee_crease","text":"data frame containing points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NCAA rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_hockey() function (or its wrapper geom_hockey()) — ncaa_hockey_features_set_colors","title":"Generate the list of colors for an NCAA rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_hockey() function (or its wrapper geom_hockey()) — ncaa_hockey_features_set_colors","text":"Generate list colors NCAA rink plot. defaults can overwritten supplying names list elements geom_ncaa_hockey() function (wrapper geom_hockey())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NCAA rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_hockey() function (or its wrapper geom_hockey()) — ncaa_hockey_features_set_colors","text":"","code":"ncaa_hockey_features_set_colors(   boards_color = \"#000000\",   center_line_color = \"#c8102e\",   blue_line_color = \"#0033a0\",   goal_line_color = \"#c8102e\",   goal_crease_outline_color = \"#c8102e\",   goal_crease_fill_color = \"#41b6e6\",   referee_crease_color = \"#c8102e\",   center_faceoff_spot_color = \"#0033a0\",   faceoff_spot_outer_ring_color = \"#c8102e\",   faceoff_spot_fill_color = \"#c8102e\",   center_faceoff_circle_color = \"#0033a0\",   non_center_faceoff_circle_color = \"#c8102e\",   faceoff_line_color = \"#c8102e\",   goal_color = \"#c8102e\",   goal_fill_color = \"#a5acaf\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NCAA rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_hockey() function (or its wrapper geom_hockey()) — ncaa_hockey_features_set_colors","text":"boards_color hexadecimal string representing color use feature center_line_color hexadecimal string representing color use feature blue_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature goal_crease_outline_color hexadecimal string representing color use feature goal_crease_fill_color hexadecimal string representing color use feature referee_crease_color hexadecimal string representing color use feature center_faceoff_spot_color hexadecimal string representing color use feature faceoff_spot_outer_ring_color hexadecimal string representing color use feature faceoff_spot_fill_color hexadecimal string representing color use feature center_faceoff_circle_color hexadecimal string representing color use feature non_center_faceoff_circle_color hexadecimal string representing color use feature faceoff_line_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature goal_fill_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_hockey_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NCAA rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_hockey() function (or its wrapper geom_hockey()) — ncaa_hockey_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_5.5m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 6-yard box — ncaa_soccer_feature_box_5.5m","title":"Generate the data frame for the points that comprise the 6-yard box — ncaa_soccer_feature_box_5.5m","text":"Generate data frame points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_5.5m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 6-yard box — ncaa_soccer_feature_box_5.5m","text":"","code":"ncaa_soccer_feature_box_5.5m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_5.5m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 6-yard box — ncaa_soccer_feature_box_5.5m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_5.5m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 6-yard box — ncaa_soccer_feature_box_5.5m","text":"data frame containing points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_9.15m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 18-yard box — ncaa_soccer_feature_box_9.15m","title":"Generate the data frame for the points that comprise the 18-yard box — ncaa_soccer_feature_box_9.15m","text":"Generate data frame points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_9.15m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 18-yard box — ncaa_soccer_feature_box_9.15m","text":"","code":"ncaa_soccer_feature_box_9.15m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_9.15m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 18-yard box — ncaa_soccer_feature_box_9.15m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_box_9.15m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 18-yard box — ncaa_soccer_feature_box_9.15m","text":"data frame containing points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — ncaa_soccer_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — ncaa_soccer_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — ncaa_soccer_feature_center_circle","text":"","code":"ncaa_soccer_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — ncaa_soccer_feature_center_circle","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — ncaa_soccer_feature_center_circle","text":"data frame containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark — ncaa_soccer_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark — ncaa_soccer_feature_center_mark","text":"Generate data frame points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark — ncaa_soccer_feature_center_mark","text":"","code":"ncaa_soccer_feature_center_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark — ncaa_soccer_feature_center_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark — ncaa_soccer_feature_center_mark","text":"data frame containing points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_corner_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the corner circle — ncaa_soccer_feature_corner_circle","title":"Generate the data frame for the points that comprise the corner circle — ncaa_soccer_feature_corner_circle","text":"Generate data frame points comprise corner circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_corner_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the corner circle — ncaa_soccer_feature_corner_circle","text":"","code":"ncaa_soccer_feature_corner_circle(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_corner_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the corner circle — ncaa_soccer_feature_corner_circle","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_corner_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the corner circle — ncaa_soccer_feature_corner_circle","text":"list data frames containing points comprise corner quarter-circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — ncaa_soccer_feature_goal","title":"Generate the data frame for the points that comprise the goal — ncaa_soccer_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — ncaa_soccer_feature_goal","text":"","code":"ncaa_soccer_feature_goal(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — ncaa_soccer_feature_goal","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — ncaa_soccer_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal lines — ncaa_soccer_feature_goal_line","title":"Generate the data frame for the points that comprise the goal lines — ncaa_soccer_feature_goal_line","text":"Generate data frame points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal lines — ncaa_soccer_feature_goal_line","text":"","code":"ncaa_soccer_feature_goal_line(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal lines — ncaa_soccer_feature_goal_line","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal lines — ncaa_soccer_feature_goal_line","text":"data frame containing points comprise goal line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — ncaa_soccer_feature_grass","title":"Generate the data frame for the points that comprise the grass background — ncaa_soccer_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — ncaa_soccer_feature_grass","text":"","code":"ncaa_soccer_feature_grass(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — ncaa_soccer_feature_grass","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — ncaa_soccer_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_halfway_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the halfway line — ncaa_soccer_feature_halfway_line","title":"Generate the data frame for the points that comprise the halfway line — ncaa_soccer_feature_halfway_line","text":"Generate data frame points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_halfway_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the halfway line — ncaa_soccer_feature_halfway_line","text":"","code":"ncaa_soccer_feature_halfway_line(   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_halfway_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the halfway line — ncaa_soccer_feature_halfway_line","text":"goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_halfway_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the halfway line — ncaa_soccer_feature_halfway_line","text":"data frame containing points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty arc — ncaa_soccer_feature_penalty_arc","title":"Generate the data frame for the points that comprise the penalty arc — ncaa_soccer_feature_penalty_arc","text":"Generate data frame points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty arc — ncaa_soccer_feature_penalty_arc","text":"","code":"ncaa_soccer_feature_penalty_arc(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty arc — ncaa_soccer_feature_penalty_arc","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty arc — ncaa_soccer_feature_penalty_arc","text":"data frame containing points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty mark — ncaa_soccer_feature_penalty_mark","title":"Generate the data frame for the points that comprise the penalty mark — ncaa_soccer_feature_penalty_mark","text":"Generate data frame points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty mark — ncaa_soccer_feature_penalty_mark","text":"","code":"ncaa_soccer_feature_penalty_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty mark — ncaa_soccer_feature_penalty_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_penalty_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty mark — ncaa_soccer_feature_penalty_mark","text":"data frame containing points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_touchlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the touchlines — ncaa_soccer_feature_touchlines","title":"Generate the data frame for the points that comprise the touchlines — ncaa_soccer_feature_touchlines","text":"Generate data frame points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_touchlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the touchlines — ncaa_soccer_feature_touchlines","text":"","code":"ncaa_soccer_feature_touchlines(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_touchlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the touchlines — ncaa_soccer_feature_touchlines","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_feature_touchlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the touchlines — ncaa_soccer_feature_touchlines","text":"list data frames containing points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for a NCAA pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_ncaa_soccer() function (or its wrapper geom_soccer()) — ncaa_soccer_features_set_colors","title":"Generate the list of colors for a NCAA pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_ncaa_soccer() function (or its wrapper geom_soccer()) — ncaa_soccer_features_set_colors","text":"Generate list colors NCAA pitch plot. defaults can overwritten supplying names list elements geom_ncaa_soccer() function (wrapper geom_soccer())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for a NCAA pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_ncaa_soccer() function (or its wrapper geom_soccer()) — ncaa_soccer_features_set_colors","text":"","code":"ncaa_soccer_features_set_colors(   grass_color = \"#196f0c\",   touchline_1_color = \"#ffffff\",   touchline_2_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   halfway_line_color = \"#ffffff\",   center_circle_color = \"#ffffff\",   corner_circle_1_color = \"#ffffff\",   corner_circle_2_color = \"#ffffff\",   corner_circle_3_color = \"#ffffff\",   corner_circle_4_color = \"#ffffff\",   box_5.5m_color = \"#ffffff\",   box_9.15m_color = \"#ffffff\",   penalty_arc_color = \"#ffffff\",   penalty_mark_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   goal_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for a NCAA pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_ncaa_soccer() function (or its wrapper geom_soccer()) — ncaa_soccer_features_set_colors","text":"grass_color hexadecimal string representing color use feature touchline_1_color hexadecimal string representing color use feature touchline_2_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature halfway_line_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature corner_circle_1_color hexadecimal string representing color use feature corner_circle_2_color hexadecimal string representing color use feature corner_circle_3_color hexadecimal string representing color use feature corner_circle_4_color hexadecimal string representing color use feature box_5.5m_color hexadecimal string representing color use feature box_9.15m_color hexadecimal string representing color use feature penalty_arc_color hexadecimal string representing color use feature penalty_mark_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_soccer_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for a NCAA pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_ncaa_soccer() function (or its wrapper geom_soccer()) — ncaa_soccer_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_baseline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the baseline(s) — ncaa_tennis_feature_baseline","title":"Generate the data frame for the points that comprise the baseline(s) — ncaa_tennis_feature_baseline","text":"Generate data frame points comprise baseline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_baseline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the baseline(s) — ncaa_tennis_feature_baseline","text":"","code":"ncaa_tennis_feature_baseline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_baseline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the baseline(s) — ncaa_tennis_feature_baseline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_baseline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the baseline(s) — ncaa_tennis_feature_baseline","text":"data frame containing points comprise baseline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark(s) — ncaa_tennis_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark(s) — ncaa_tennis_feature_center_mark","text":"Generate data frame points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark(s) — ncaa_tennis_feature_center_mark","text":"","code":"ncaa_tennis_feature_center_mark(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark(s) — ncaa_tennis_feature_center_mark","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark(s) — ncaa_tennis_feature_center_mark","text":"data frame containing points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_service_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center service\nline(s) — ncaa_tennis_feature_center_service_line","title":"Generate the data frame for the points that comprise the center service\nline(s) — ncaa_tennis_feature_center_service_line","text":"Generate data frame points comprise center service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_service_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center service\nline(s) — ncaa_tennis_feature_center_service_line","text":"","code":"ncaa_tennis_feature_center_service_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_service_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center service\nline(s) — ncaa_tennis_feature_center_service_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_center_service_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center service\nline(s) — ncaa_tennis_feature_center_service_line","text":"data frame containing points comprise center service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_court_background.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court background — ncaa_tennis_feature_court_background","title":"Generate the data frame for the points that comprise the court background — ncaa_tennis_feature_court_background","text":"Generate data frame points comprise court background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_court_background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court background — ncaa_tennis_feature_court_background","text":"","code":"ncaa_tennis_feature_court_background(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_court_background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court background — ncaa_tennis_feature_court_background","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_court_background.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court background — ncaa_tennis_feature_court_background","text":"data frame containing points comprise court background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_doubles_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_doubles_sideline","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_doubles_sideline","text":"Generate data frame points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_doubles_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_doubles_sideline","text":"","code":"ncaa_tennis_feature_doubles_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_doubles_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_doubles_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_doubles_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_doubles_sideline","text":"data frame containing points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — ncaa_tennis_feature_net","title":"Generate the data frame for the points that comprise the net — ncaa_tennis_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — ncaa_tennis_feature_net","text":"","code":"ncaa_tennis_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — ncaa_tennis_feature_net","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — ncaa_tennis_feature_net","text":"data frame containing points comprise center mark(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_service_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the service line(s) — ncaa_tennis_feature_service_line","title":"Generate the data frame for the points that comprise the service line(s) — ncaa_tennis_feature_service_line","text":"Generate data frame points comprise service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_service_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the service line(s) — ncaa_tennis_feature_service_line","text":"","code":"ncaa_tennis_feature_service_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_service_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the service line(s) — ncaa_tennis_feature_service_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_service_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the service line(s) — ncaa_tennis_feature_service_line","text":"data frame containing points comprise service line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_singles_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_singles_sideline","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_singles_sideline","text":"Generate data frame points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_singles_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_singles_sideline","text":"","code":"ncaa_tennis_feature_singles_sideline(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_singles_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_singles_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_feature_singles_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the doubles sideline(s) — ncaa_tennis_feature_singles_sideline","text":"data frame containing points comprise doubles sideline(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NCAA tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_tennis() function (or its wrapper geom_tennis()) — ncaa_tennis_features_set_colors","title":"Generate the list of colors for an NCAA tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_tennis() function (or its wrapper geom_tennis()) — ncaa_tennis_features_set_colors","text":"Generate list colors NCAA tennis court plot. defaults can overwritten supplying names list elements geom_ncaa_tennis() function (wrapper geom_tennis())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NCAA tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_tennis() function (or its wrapper geom_tennis()) — ncaa_tennis_features_set_colors","text":"","code":"ncaa_tennis_features_set_colors(   court_background_color = \"#196f0c\",   baseline_color = \"#ffffff\",   doubles_sideline_1_color = \"#ffffff\",   doubles_sideline_2_color = \"#ffffff\",   singles_sideline_1_color = \"#ffffff\",   singles_sideline_2_color = \"#ffffff\",   service_line_color = \"#ffffff\",   center_service_line_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NCAA tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_tennis() function (or its wrapper geom_tennis()) — ncaa_tennis_features_set_colors","text":"baseline_color hexadecimal string representing color use feature service_line_color hexadecimal string representing color use feature center_service_line_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature background_color hexadecimal string representing color use feature sideline_1_color hexadecimal string representing color use feature sideline_2_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/ncaa_tennis_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NCAA tennis court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_ncaa_tennis() function (or its wrapper geom_tennis()) — ncaa_tennis_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the directional arrows — nfl_feature_directional_arrows","title":"Generate the data frame for the points that comprise the directional arrows — nfl_feature_directional_arrows","text":"Generate data frame points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the directional arrows — nfl_feature_directional_arrows","text":"","code":"nfl_feature_directional_arrows(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the directional arrows — nfl_feature_directional_arrows","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the directional arrows — nfl_feature_directional_arrows","text":"data frame contains points comprise directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the nfl_feature_directional_arrows() function below and helps to\noptimize performance — nfl_feature_directional_arrows_df_maker","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the nfl_feature_directional_arrows() function below and helps to\noptimize performance — nfl_feature_directional_arrows_df_maker","text":"Generate data frames points comprise directional arrows. function fed nfl_feature_directional_arrows() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the nfl_feature_directional_arrows() function below and helps to\noptimize performance — nfl_feature_directional_arrows_df_maker","text":"","code":"nfl_feature_directional_arrows_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\",   lower = TRUE )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the nfl_feature_directional_arrows() function below and helps to\noptimize performance — nfl_feature_directional_arrows_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw' lower boolean indicating whether return lower directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_directional_arrows_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the directional arrows. This\nfunction is fed into the nfl_feature_directional_arrows() function below and helps to\noptimize performance — nfl_feature_directional_arrows_df_maker","text":"data frame (list data frames) contain coordinates directional arrows","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the endline — nfl_feature_endline","title":"Generate the data frame for the points that comprise the endline — nfl_feature_endline","text":"Generate data frame points comprise endline","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the endline — nfl_feature_endline","text":"","code":"nfl_feature_endline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the endline — nfl_feature_endline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the endline — nfl_feature_endline","text":"data frame containing points comprise endlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — nfl_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — nfl_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — nfl_feature_goal_line","text":"","code":"nfl_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — nfl_feature_goal_line","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — nfl_feature_goal_line","text":"data frame containing points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — nfl_feature_grass","title":"Generate the data frame for the points that comprise the grass background — nfl_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — nfl_feature_grass","text":"","code":"nfl_feature_grass(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — nfl_feature_grass","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — nfl_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — nfl_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — nfl_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — nfl_feature_sideline","text":"","code":"nfl_feature_sideline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — nfl_feature_sideline","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — nfl_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_try_markings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the try lines — nfl_feature_try_markings","title":"Generate the data frame for the points that comprise the try lines — nfl_feature_try_markings","text":"Generate data frame points comprise try lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_try_markings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the try lines — nfl_feature_try_markings","text":"","code":"nfl_feature_try_markings(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_try_markings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the try lines — nfl_feature_try_markings","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_try_markings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the try lines — nfl_feature_try_markings","text":"list data frames containing points comprise try markings","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the yard lines — nfl_feature_yard_markings","title":"Generate the data frame for the points that comprise the yard lines — nfl_feature_yard_markings","text":"Generate data frame points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the yard lines — nfl_feature_yard_markings","text":"","code":"nfl_feature_yard_markings(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the yard lines — nfl_feature_yard_markings","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the yard lines — nfl_feature_yard_markings","text":"data frame containing points comprise yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings_df_maker.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the nfl_feature_yard_markings() function below and helps to\noptimize performance — nfl_feature_yard_markings_df_maker","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the nfl_feature_yard_markings() function below and helps to\noptimize performance — nfl_feature_yard_markings_df_maker","text":"Generate data frames points comprise yard lines. function fed nfl_feature_yard_markings() function helps optimize performance","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings_df_maker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the nfl_feature_yard_markings() function below and helps to\noptimize performance — nfl_feature_yard_markings_df_maker","text":"","code":"nfl_feature_yard_markings_df_maker(   yardage,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings_df_maker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the nfl_feature_yard_markings() function below and helps to\noptimize performance — nfl_feature_yard_markings_df_maker","text":"yardage yardage create yard markings full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_markings_df_maker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the yard lines. This\nfunction is fed into the nfl_feature_yard_markings() function below and helps to\noptimize performance — nfl_feature_yard_markings_df_maker","text":"data frame (list data frames) contain coordinates yard lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_numbers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that will become the yard marking\nnumbers — nfl_feature_yard_numbers","title":"Generate the data frame for the points that will become the yard marking\nnumbers — nfl_feature_yard_numbers","text":"Generate data frame points become yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_numbers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that will become the yard marking\nnumbers — nfl_feature_yard_numbers","text":"","code":"nfl_feature_yard_numbers(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_numbers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that will become the yard marking\nnumbers — nfl_feature_yard_numbers","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_feature_yard_numbers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that will become the yard marking\nnumbers — nfl_feature_yard_numbers","text":"data frame contains information needed add yard marking numbers","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nfl() function (or its wrapper geom_football()) — nfl_features_set_colors","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nfl() function (or its wrapper geom_football()) — nfl_features_set_colors","text":"Generate list colors NFL field plot. defaults can overwritten supplying names list elements geom_nfl() function (wrapper geom_football())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nfl() function (or its wrapper geom_football()) — nfl_features_set_colors","text":"","code":"nfl_features_set_colors(   grass_color = \"#196f0c\",   sideline_1_color = \"#ffffff\",   sideline_2_color = \"#ffffff\",   endline_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   yard_markings_color = \"#ffffff\",   try_marking_color = \"#ffffff\",   directional_arrows_color = \"#ffffff\",   yard_numbers_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nfl() function (or its wrapper geom_football()) — nfl_features_set_colors","text":"grass_color hexadecimal string representing color use feature sideline_1_color hexadecimal string representing color use feature sideline_2_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature yard_markings_color hexadecimal string representing color use feature try_marking_color hexadecimal string representing color use feature directional_arrows_color hexadecimal string representing color use feature yard_numbers_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nfl_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NFL field plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nfl() function (or its wrapper geom_football()) — nfl_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_blue_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the blue line(s) — nhl_feature_blue_line","title":"Generate the data frame for the points that comprise the blue line(s) — nhl_feature_blue_line","text":"Generate data frame points comprise blue line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_blue_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the blue line(s) — nhl_feature_blue_line","text":"","code":"nhl_feature_blue_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_blue_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the blue line(s) — nhl_feature_blue_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_blue_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the blue line(s) — nhl_feature_blue_line","text":"data frame containing points comprise blue line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the boards — nhl_feature_boards","title":"Generate the data frame for the points that comprise the boards — nhl_feature_boards","text":"Generate data frame points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the boards — nhl_feature_boards","text":"","code":"nhl_feature_boards(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the boards — nhl_feature_boards","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the boards — nhl_feature_boards","text":"data frame containing points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_center_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center line — nhl_feature_center_line","title":"Generate the data frame for the points that comprise the center line — nhl_feature_center_line","text":"Generate data frame points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_center_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center line — nhl_feature_center_line","text":"","code":"nhl_feature_center_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_center_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center line — nhl_feature_center_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_center_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center line — nhl_feature_center_line","text":"data frame containing points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff circles — nhl_feature_faceoff_circle","title":"Generate the data frame for the points that comprise the faceoff circles — nhl_feature_faceoff_circle","text":"Generate data frame points comprise faceoff circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff circles — nhl_feature_faceoff_circle","text":"","code":"nhl_feature_faceoff_circle(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff circles — nhl_feature_faceoff_circle","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff circles — nhl_feature_faceoff_circle","text":"data frame containing points comprise faceoff circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff lines — nhl_feature_faceoff_lines","title":"Generate the data frame for the points that comprise the faceoff lines — nhl_feature_faceoff_lines","text":"Generate data frame points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff lines — nhl_feature_faceoff_lines","text":"","code":"nhl_feature_faceoff_lines(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff lines — nhl_feature_faceoff_lines","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff lines — nhl_feature_faceoff_lines","text":"data frame containing points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff spots — nhl_feature_faceoff_spot","title":"Generate the data frame for the points that comprise the faceoff spots — nhl_feature_faceoff_spot","text":"Generate data frame points comprise faceoff spots","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff spots — nhl_feature_faceoff_spot","text":"","code":"nhl_feature_faceoff_spot(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff spots — nhl_feature_faceoff_spot","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_faceoff_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff spots — nhl_feature_faceoff_spot","text":"data frame containing points comprise faceoff spot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — nhl_feature_goal","title":"Generate the data frame for the points that comprise the goal — nhl_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — nhl_feature_goal","text":"","code":"nhl_feature_goal(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — nhl_feature_goal","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — nhl_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal crease — nhl_feature_goal_crease","title":"Generate the data frame for the points that comprise the goal crease — nhl_feature_goal_crease","text":"Generate data frame points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal crease — nhl_feature_goal_crease","text":"","code":"nhl_feature_goal_crease(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal crease — nhl_feature_goal_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal crease — nhl_feature_goal_crease","text":"data frame containing points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — nhl_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — nhl_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — nhl_feature_goal_line","text":"","code":"nhl_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — nhl_feature_goal_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — nhl_feature_goal_line","text":"data frame containing points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goalkeepers_restricted_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nhl_feature_goalkeepers_restricted_area","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nhl_feature_goalkeepers_restricted_area","text":"Generate data frame points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goalkeepers_restricted_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nhl_feature_goalkeepers_restricted_area","text":"","code":"nhl_feature_goalkeepers_restricted_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goalkeepers_restricted_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nhl_feature_goalkeepers_restricted_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_goalkeepers_restricted_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nhl_feature_goalkeepers_restricted_area","text":"data frame containing points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_referee_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the referee's crease — nhl_feature_referee_crease","title":"Generate the data frame for the points that comprise the referee's crease — nhl_feature_referee_crease","text":"Generate data frame points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_referee_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the referee's crease — nhl_feature_referee_crease","text":"","code":"nhl_feature_referee_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_referee_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the referee's crease — nhl_feature_referee_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_feature_referee_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the referee's crease — nhl_feature_referee_crease","text":"data frame containing points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nhl() function (or its wrapper geom_hockey()) — nhl_features_set_colors","title":"Generate the list of colors for an NHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nhl() function (or its wrapper geom_hockey()) — nhl_features_set_colors","text":"Generate list colors NHL rink plot. defaults can overwritten supplying names list elements geom_nhl() function (wrapper geom_hockey())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nhl() function (or its wrapper geom_hockey()) — nhl_features_set_colors","text":"","code":"nhl_features_set_colors(   boards_color = \"#000000\",   center_line_color = \"#c8102e\",   blue_line_color = \"#0033a0\",   goal_line_color = \"#c8102e\",   goalkeepers_restricted_area_color = \"#c8102e\",   goal_crease_outline_color = \"#c8102e\",   goal_crease_fill_color = \"#41b6e6\",   referee_crease_color = \"#c8102e\",   center_faceoff_spot_color = \"#0033a0\",   faceoff_spot_outer_ring_color = \"#c8102e\",   faceoff_spot_fill_color = \"#c8102e\",   center_faceoff_circle_color = \"#0033a0\",   non_center_faceoff_circle_color = \"#c8102e\",   faceoff_line_color = \"#c8102e\",   goal_color = \"#c8102e\",   goal_fill_color = \"#a5acaf\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nhl() function (or its wrapper geom_hockey()) — nhl_features_set_colors","text":"boards_color hexadecimal string representing color use feature center_line_color hexadecimal string representing color use feature blue_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature goalkeepers_restricted_area_color hexadecimal string representing color use feature goal_crease_outline_color hexadecimal string representing color use feature goal_crease_fill_color hexadecimal string representing color use feature referee_crease_color hexadecimal string representing color use feature center_faceoff_spot_color hexadecimal string representing color use feature faceoff_spot_outer_ring_color hexadecimal string representing color use feature faceoff_spot_fill_color hexadecimal string representing color use feature center_faceoff_circle_color hexadecimal string representing color use feature non_center_faceoff_circle_color hexadecimal string representing color use feature faceoff_line_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature goal_fill_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nhl_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nhl() function (or its wrapper geom_hockey()) — nhl_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_blue_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the blue line(s) — nwhl_feature_blue_line","title":"Generate the data frame for the points that comprise the blue line(s) — nwhl_feature_blue_line","text":"Generate data frame points comprise blue line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_blue_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the blue line(s) — nwhl_feature_blue_line","text":"","code":"nwhl_feature_blue_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_blue_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the blue line(s) — nwhl_feature_blue_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_blue_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the blue line(s) — nwhl_feature_blue_line","text":"data frame containing points comprise blue line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the boards — nwhl_feature_boards","title":"Generate the data frame for the points that comprise the boards — nwhl_feature_boards","text":"Generate data frame points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the boards — nwhl_feature_boards","text":"","code":"nwhl_feature_boards(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the boards — nwhl_feature_boards","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the boards — nwhl_feature_boards","text":"data frame containing points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_center_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center line — nwhl_feature_center_line","title":"Generate the data frame for the points that comprise the center line — nwhl_feature_center_line","text":"Generate data frame points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_center_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center line — nwhl_feature_center_line","text":"","code":"nwhl_feature_center_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_center_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center line — nwhl_feature_center_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_center_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center line — nwhl_feature_center_line","text":"data frame containing points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff circles — nwhl_feature_faceoff_circle","title":"Generate the data frame for the points that comprise the faceoff circles — nwhl_feature_faceoff_circle","text":"Generate data frame points comprise faceoff circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff circles — nwhl_feature_faceoff_circle","text":"","code":"nwhl_feature_faceoff_circle(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff circles — nwhl_feature_faceoff_circle","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff circles — nwhl_feature_faceoff_circle","text":"data frame containing points comprise faceoff circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff lines — nwhl_feature_faceoff_lines","title":"Generate the data frame for the points that comprise the faceoff lines — nwhl_feature_faceoff_lines","text":"Generate data frame points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff lines — nwhl_feature_faceoff_lines","text":"","code":"nwhl_feature_faceoff_lines(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff lines — nwhl_feature_faceoff_lines","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff lines — nwhl_feature_faceoff_lines","text":"data frame containing points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff spots — nwhl_feature_faceoff_spot","title":"Generate the data frame for the points that comprise the faceoff spots — nwhl_feature_faceoff_spot","text":"Generate data frame points comprise faceoff spots","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff spots — nwhl_feature_faceoff_spot","text":"","code":"nwhl_feature_faceoff_spot(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff spots — nwhl_feature_faceoff_spot","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_faceoff_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff spots — nwhl_feature_faceoff_spot","text":"data frame containing points comprise faceoff spot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — nwhl_feature_goal","title":"Generate the data frame for the points that comprise the goal — nwhl_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — nwhl_feature_goal","text":"","code":"nwhl_feature_goal(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — nwhl_feature_goal","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — nwhl_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal crease — nwhl_feature_goal_crease","title":"Generate the data frame for the points that comprise the goal crease — nwhl_feature_goal_crease","text":"Generate data frame points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal crease — nwhl_feature_goal_crease","text":"","code":"nwhl_feature_goal_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal crease — nwhl_feature_goal_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal crease — nwhl_feature_goal_crease","text":"data frame containing points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — nwhl_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — nwhl_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — nwhl_feature_goal_line","text":"","code":"nwhl_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — nwhl_feature_goal_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — nwhl_feature_goal_line","text":"data frame containing points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goalkeepers_restricted_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nwhl_feature_goalkeepers_restricted_area","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nwhl_feature_goalkeepers_restricted_area","text":"Generate data frame points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goalkeepers_restricted_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nwhl_feature_goalkeepers_restricted_area","text":"","code":"nwhl_feature_goalkeepers_restricted_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goalkeepers_restricted_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nwhl_feature_goalkeepers_restricted_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_goalkeepers_restricted_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — nwhl_feature_goalkeepers_restricted_area","text":"data frame containing points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_referee_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the referee's crease — nwhl_feature_referee_crease","title":"Generate the data frame for the points that comprise the referee's crease — nwhl_feature_referee_crease","text":"Generate data frame points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_referee_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the referee's crease — nwhl_feature_referee_crease","text":"","code":"nwhl_feature_referee_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_referee_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the referee's crease — nwhl_feature_referee_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_feature_referee_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the referee's crease — nwhl_feature_referee_crease","text":"data frame containing points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NWHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwhl() function (or its wrapper geom_hockey()) — nwhl_features_set_colors","title":"Generate the list of colors for an NWHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwhl() function (or its wrapper geom_hockey()) — nwhl_features_set_colors","text":"Generate list colors NWHL rink plot. defaults can overwritten supplying names list elements geom_nwhl() function (wrapper geom_hockey())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NWHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwhl() function (or its wrapper geom_hockey()) — nwhl_features_set_colors","text":"","code":"nwhl_features_set_colors(   boards_color = \"#000000\",   center_line_color = \"#c8102e\",   blue_line_color = \"#0033a0\",   goal_line_color = \"#c8102e\",   goalkeepers_restricted_area_color = \"#c8102e\",   goal_crease_outline_color = \"#c8102e\",   goal_crease_fill_color = \"#41b6e6\",   referee_crease_color = \"#c8102e\",   center_faceoff_spot_color = \"#0033a0\",   faceoff_spot_outer_ring_color = \"#c8102e\",   faceoff_spot_fill_color = \"#c8102e\",   center_faceoff_circle_color = \"#0033a0\",   non_center_faceoff_circle_color = \"#c8102e\",   faceoff_line_color = \"#c8102e\",   goal_color = \"#c8102e\",   goal_fill_color = \"#a5acaf\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NWHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwhl() function (or its wrapper geom_hockey()) — nwhl_features_set_colors","text":"boards_color hexadecimal string representing color use feature center_line_color hexadecimal string representing color use feature blue_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature goalkeepers_restricted_area_color hexadecimal string representing color use feature goal_crease_outline_color hexadecimal string representing color use feature goal_crease_fill_color hexadecimal string representing color use feature referee_crease_color hexadecimal string representing color use feature center_faceoff_spot_color hexadecimal string representing color use feature faceoff_spot_outer_ring_color hexadecimal string representing color use feature faceoff_spot_fill_color hexadecimal string representing color use feature center_faceoff_circle_color hexadecimal string representing color use feature non_center_faceoff_circle_color hexadecimal string representing color use feature faceoff_line_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature goal_fill_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwhl_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NWHL rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwhl() function (or its wrapper geom_hockey()) — nwhl_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_5.5m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 6-yard box — nwsl_feature_box_5.5m","title":"Generate the data frame for the points that comprise the 6-yard box — nwsl_feature_box_5.5m","text":"Generate data frame points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_5.5m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 6-yard box — nwsl_feature_box_5.5m","text":"","code":"nwsl_feature_box_5.5m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_5.5m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 6-yard box — nwsl_feature_box_5.5m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_5.5m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 6-yard box — nwsl_feature_box_5.5m","text":"data frame containing points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_9.15m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 18-yard box — nwsl_feature_box_9.15m","title":"Generate the data frame for the points that comprise the 18-yard box — nwsl_feature_box_9.15m","text":"Generate data frame points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_9.15m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 18-yard box — nwsl_feature_box_9.15m","text":"","code":"nwsl_feature_box_9.15m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_9.15m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 18-yard box — nwsl_feature_box_9.15m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_box_9.15m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 18-yard box — nwsl_feature_box_9.15m","text":"data frame containing points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — nwsl_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — nwsl_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — nwsl_feature_center_circle","text":"","code":"nwsl_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — nwsl_feature_center_circle","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — nwsl_feature_center_circle","text":"data frame containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark — nwsl_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark — nwsl_feature_center_mark","text":"Generate data frame points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark — nwsl_feature_center_mark","text":"","code":"nwsl_feature_center_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark — nwsl_feature_center_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark — nwsl_feature_center_mark","text":"data frame containing points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_corner_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the corner circle — nwsl_feature_corner_circle","title":"Generate the data frame for the points that comprise the corner circle — nwsl_feature_corner_circle","text":"Generate data frame points comprise corner circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_corner_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the corner circle — nwsl_feature_corner_circle","text":"","code":"nwsl_feature_corner_circle(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_corner_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the corner circle — nwsl_feature_corner_circle","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_corner_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the corner circle — nwsl_feature_corner_circle","text":"list data frames containing points comprise corner quarter-circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — nwsl_feature_goal","title":"Generate the data frame for the points that comprise the goal — nwsl_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — nwsl_feature_goal","text":"","code":"nwsl_feature_goal(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — nwsl_feature_goal","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — nwsl_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal lines — nwsl_feature_goal_line","title":"Generate the data frame for the points that comprise the goal lines — nwsl_feature_goal_line","text":"Generate data frame points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal lines — nwsl_feature_goal_line","text":"","code":"nwsl_feature_goal_line(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal lines — nwsl_feature_goal_line","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal lines — nwsl_feature_goal_line","text":"data frame containing points comprise goal line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — nwsl_feature_grass","title":"Generate the data frame for the points that comprise the grass background — nwsl_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — nwsl_feature_grass","text":"","code":"nwsl_feature_grass(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — nwsl_feature_grass","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — nwsl_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_halfway_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the halfway line — nwsl_feature_halfway_line","title":"Generate the data frame for the points that comprise the halfway line — nwsl_feature_halfway_line","text":"Generate data frame points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_halfway_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the halfway line — nwsl_feature_halfway_line","text":"","code":"nwsl_feature_halfway_line(   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_halfway_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the halfway line — nwsl_feature_halfway_line","text":"goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_halfway_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the halfway line — nwsl_feature_halfway_line","text":"data frame containing points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty arc — nwsl_feature_penalty_arc","title":"Generate the data frame for the points that comprise the penalty arc — nwsl_feature_penalty_arc","text":"Generate data frame points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty arc — nwsl_feature_penalty_arc","text":"","code":"nwsl_feature_penalty_arc(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty arc — nwsl_feature_penalty_arc","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty arc — nwsl_feature_penalty_arc","text":"data frame containing points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty mark — nwsl_feature_penalty_mark","title":"Generate the data frame for the points that comprise the penalty mark — nwsl_feature_penalty_mark","text":"Generate data frame points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty mark — nwsl_feature_penalty_mark","text":"","code":"nwsl_feature_penalty_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty mark — nwsl_feature_penalty_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_penalty_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty mark — nwsl_feature_penalty_mark","text":"data frame containing points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_touchlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the touchlines — nwsl_feature_touchlines","title":"Generate the data frame for the points that comprise the touchlines — nwsl_feature_touchlines","text":"Generate data frame points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_touchlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the touchlines — nwsl_feature_touchlines","text":"","code":"nwsl_feature_touchlines(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_touchlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the touchlines — nwsl_feature_touchlines","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_feature_touchlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the touchlines — nwsl_feature_touchlines","text":"list data frames containing points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an NWSL pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwsl() function (or its wrapper geom_soccer()) — nwsl_features_set_colors","title":"Generate the list of colors for an NWSL pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwsl() function (or its wrapper geom_soccer()) — nwsl_features_set_colors","text":"Generate list colors NWSL pitch plot. defaults can overwritten supplying names list elements geom_nwsl() function (wrapper geom_soccer())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an NWSL pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwsl() function (or its wrapper geom_soccer()) — nwsl_features_set_colors","text":"","code":"nwsl_features_set_colors(   grass_color = \"#196f0c\",   touchline_1_color = \"#ffffff\",   touchline_2_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   halfway_line_color = \"#ffffff\",   center_circle_color = \"#ffffff\",   corner_circle_1_color = \"#ffffff\",   corner_circle_2_color = \"#ffffff\",   corner_circle_3_color = \"#ffffff\",   corner_circle_4_color = \"#ffffff\",   box_5.5m_color = \"#ffffff\",   box_9.15m_color = \"#ffffff\",   penalty_arc_color = \"#ffffff\",   penalty_mark_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   goal_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an NWSL pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwsl() function (or its wrapper geom_soccer()) — nwsl_features_set_colors","text":"grass_color hexadecimal string representing color use feature touchline_1_color hexadecimal string representing color use feature touchline_2_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature halfway_line_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature corner_circle_1_color hexadecimal string representing color use feature corner_circle_2_color hexadecimal string representing color use feature corner_circle_3_color hexadecimal string representing color use feature corner_circle_4_color hexadecimal string representing color use feature box_5.5m_color hexadecimal string representing color use feature box_9.15m_color hexadecimal string representing color use feature penalty_arc_color hexadecimal string representing color use feature penalty_mark_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/nwsl_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an NWSL pitch plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_nwsl() function (or its wrapper geom_soccer()) — nwsl_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_blue_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the blue line(s) — phf_feature_blue_line","title":"Generate the data frame for the points that comprise the blue line(s) — phf_feature_blue_line","text":"Generate data frame points comprise blue line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_blue_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the blue line(s) — phf_feature_blue_line","text":"","code":"phf_feature_blue_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_blue_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the blue line(s) — phf_feature_blue_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_blue_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the blue line(s) — phf_feature_blue_line","text":"data frame containing points comprise blue line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the boards — phf_feature_boards","title":"Generate the data frame for the points that comprise the boards — phf_feature_boards","text":"Generate data frame points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the boards — phf_feature_boards","text":"","code":"phf_feature_boards(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the boards — phf_feature_boards","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the boards — phf_feature_boards","text":"data frame containing points comprise boards","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_center_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center line — phf_feature_center_line","title":"Generate the data frame for the points that comprise the center line — phf_feature_center_line","text":"Generate data frame points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_center_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center line — phf_feature_center_line","text":"","code":"phf_feature_center_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_center_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center line — phf_feature_center_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_center_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center line — phf_feature_center_line","text":"data frame containing points comprise center line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff circles — phf_feature_faceoff_circle","title":"Generate the data frame for the points that comprise the faceoff circles — phf_feature_faceoff_circle","text":"Generate data frame points comprise faceoff circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff circles — phf_feature_faceoff_circle","text":"","code":"phf_feature_faceoff_circle(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff circles — phf_feature_faceoff_circle","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff circles — phf_feature_faceoff_circle","text":"data frame containing points comprise faceoff circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff lines — phf_feature_faceoff_lines","title":"Generate the data frame for the points that comprise the faceoff lines — phf_feature_faceoff_lines","text":"Generate data frame points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff lines — phf_feature_faceoff_lines","text":"","code":"phf_feature_faceoff_lines(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff lines — phf_feature_faceoff_lines","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff lines — phf_feature_faceoff_lines","text":"data frame containing points comprise faceoff lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the faceoff spots — phf_feature_faceoff_spot","title":"Generate the data frame for the points that comprise the faceoff spots — phf_feature_faceoff_spot","text":"Generate data frame points comprise faceoff spots","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the faceoff spots — phf_feature_faceoff_spot","text":"","code":"phf_feature_faceoff_spot(   center = c(0, 0),   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the faceoff spots — phf_feature_faceoff_spot","text":"center center coordinates faceoff spot full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_faceoff_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the faceoff spots — phf_feature_faceoff_spot","text":"data frame containing points comprise faceoff spot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — phf_feature_goal","title":"Generate the data frame for the points that comprise the goal — phf_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — phf_feature_goal","text":"","code":"phf_feature_goal(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — phf_feature_goal","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — phf_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal crease — phf_feature_goal_crease","title":"Generate the data frame for the points that comprise the goal crease — phf_feature_goal_crease","text":"Generate data frame points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal crease — phf_feature_goal_crease","text":"","code":"phf_feature_goal_crease(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal crease — phf_feature_goal_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal crease — phf_feature_goal_crease","text":"data frame containing points comprise goal crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal line — phf_feature_goal_line","title":"Generate the data frame for the points that comprise the goal line — phf_feature_goal_line","text":"Generate data frame points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal line — phf_feature_goal_line","text":"","code":"phf_feature_goal_line(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal line — phf_feature_goal_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal line — phf_feature_goal_line","text":"data frame containing points comprise goal line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goalkeepers_restricted_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — phf_feature_goalkeepers_restricted_area","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — phf_feature_goalkeepers_restricted_area","text":"Generate data frame points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goalkeepers_restricted_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — phf_feature_goalkeepers_restricted_area","text":"","code":"phf_feature_goalkeepers_restricted_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goalkeepers_restricted_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — phf_feature_goalkeepers_restricted_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_goalkeepers_restricted_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goalkeeper's\nrestricted area — phf_feature_goalkeepers_restricted_area","text":"data frame containing points comprise goalkeeper's restricted area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_referee_crease.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the referee's crease — phf_feature_referee_crease","title":"Generate the data frame for the points that comprise the referee's crease — phf_feature_referee_crease","text":"Generate data frame points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_referee_crease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the referee's crease — phf_feature_referee_crease","text":"","code":"phf_feature_referee_crease(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_referee_crease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the referee's crease — phf_feature_referee_crease","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_feature_referee_crease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the referee's crease — phf_feature_referee_crease","text":"data frame containing points comprise referee's crease","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for an PHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_phf() function (or its wrapper geom_hockey()) — phf_features_set_colors","title":"Generate the list of colors for an PHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_phf() function (or its wrapper geom_hockey()) — phf_features_set_colors","text":"Generate list colors PHF rink plot. defaults can overwritten supplying names list elements geom_phf() function (wrapper geom_hockey())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for an PHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_phf() function (or its wrapper geom_hockey()) — phf_features_set_colors","text":"","code":"phf_features_set_colors(   boards_color = \"#000000\",   center_line_color = \"#c8102e\",   blue_line_color = \"#0033a0\",   goal_line_color = \"#c8102e\",   goalkeepers_restricted_area_color = \"#c8102e\",   goal_crease_outline_color = \"#c8102e\",   goal_crease_fill_color = \"#41b6e6\",   referee_crease_color = \"#c8102e\",   center_faceoff_spot_color = \"#0033a0\",   faceoff_spot_outer_ring_color = \"#c8102e\",   faceoff_spot_fill_color = \"#c8102e\",   center_faceoff_circle_color = \"#0033a0\",   non_center_faceoff_circle_color = \"#c8102e\",   faceoff_line_color = \"#c8102e\",   goal_color = \"#c8102e\",   goal_fill_color = \"#a5acaf\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for an PHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_phf() function (or its wrapper geom_hockey()) — phf_features_set_colors","text":"boards_color hexadecimal string representing color use feature center_line_color hexadecimal string representing color use feature blue_line_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature goalkeepers_restricted_area_color hexadecimal string representing color use feature goal_crease_outline_color hexadecimal string representing color use feature goal_crease_fill_color hexadecimal string representing color use feature referee_crease_color hexadecimal string representing color use feature center_faceoff_spot_color hexadecimal string representing color use feature faceoff_spot_outer_ring_color hexadecimal string representing color use feature faceoff_spot_fill_color hexadecimal string representing color use feature center_faceoff_circle_color hexadecimal string representing color use feature non_center_faceoff_circle_color hexadecimal string representing color use feature faceoff_line_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature goal_fill_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/phf_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for an PHF rink plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_phf() function (or its wrapper geom_hockey()) — phf_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_5.5m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 6-yard box — premier_league_feature_box_5.5m","title":"Generate the data frame for the points that comprise the 6-yard box — premier_league_feature_box_5.5m","text":"Generate data frame points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_5.5m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 6-yard box — premier_league_feature_box_5.5m","text":"","code":"premier_league_feature_box_5.5m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_5.5m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 6-yard box — premier_league_feature_box_5.5m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_5.5m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 6-yard box — premier_league_feature_box_5.5m","text":"data frame containing points comprise 6-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_9.15m.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the 18-yard box — premier_league_feature_box_9.15m","title":"Generate the data frame for the points that comprise the 18-yard box — premier_league_feature_box_9.15m","text":"Generate data frame points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_9.15m.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the 18-yard box — premier_league_feature_box_9.15m","text":"","code":"premier_league_feature_box_9.15m(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_9.15m.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the 18-yard box — premier_league_feature_box_9.15m","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_box_9.15m.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the 18-yard box — premier_league_feature_box_9.15m","text":"data frame containing points comprise 18-yard box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circle — premier_league_feature_center_circle","title":"Generate the data frame for the points that comprise the center circle — premier_league_feature_center_circle","text":"Generate data frame points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circle — premier_league_feature_center_circle","text":"","code":"premier_league_feature_center_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circle — premier_league_feature_center_circle","text":"full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circle — premier_league_feature_center_circle","text":"data frame containing points comprise center circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center mark — premier_league_feature_center_mark","title":"Generate the data frame for the points that comprise the center mark — premier_league_feature_center_mark","text":"Generate data frame points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center mark — premier_league_feature_center_mark","text":"","code":"premier_league_feature_center_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center mark — premier_league_feature_center_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_center_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center mark — premier_league_feature_center_mark","text":"data frame containing points comprise center mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_corner_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the corner circle — premier_league_feature_corner_circle","title":"Generate the data frame for the points that comprise the corner circle — premier_league_feature_corner_circle","text":"Generate data frame points comprise corner circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_corner_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the corner circle — premier_league_feature_corner_circle","text":"","code":"premier_league_feature_corner_circle(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_corner_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the corner circle — premier_league_feature_corner_circle","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_corner_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the corner circle — premier_league_feature_corner_circle","text":"list data frames containing points comprise corner quarter-circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal — premier_league_feature_goal","title":"Generate the data frame for the points that comprise the goal — premier_league_feature_goal","text":"Generate data frame points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal — premier_league_feature_goal","text":"","code":"premier_league_feature_goal(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal — premier_league_feature_goal","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal — premier_league_feature_goal","text":"data frame containing points comprise goal","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the goal lines — premier_league_feature_goal_line","title":"Generate the data frame for the points that comprise the goal lines — premier_league_feature_goal_line","text":"Generate data frame points comprise goal lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the goal lines — premier_league_feature_goal_line","text":"","code":"premier_league_feature_goal_line(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the goal lines — premier_league_feature_goal_line","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_goal_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the goal lines — premier_league_feature_goal_line","text":"data frame containing points comprise goal line(s)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_grass.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the grass background — premier_league_feature_grass","title":"Generate the data frame for the points that comprise the grass background — premier_league_feature_grass","text":"Generate data frame points comprise grass background","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_grass.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the grass background — premier_league_feature_grass","text":"","code":"premier_league_feature_grass(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_grass.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the grass background — premier_league_feature_grass","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_grass.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the grass background — premier_league_feature_grass","text":"data frame containing points comprise grass","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_halfway_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the halfway line — premier_league_feature_halfway_line","title":"Generate the data frame for the points that comprise the halfway line — premier_league_feature_halfway_line","text":"Generate data frame points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_halfway_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the halfway line — premier_league_feature_halfway_line","text":"","code":"premier_league_feature_halfway_line(   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_halfway_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the halfway line — premier_league_feature_halfway_line","text":"goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_halfway_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the halfway line — premier_league_feature_halfway_line","text":"data frame containing points comprise halfway line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty arc — premier_league_feature_penalty_arc","title":"Generate the data frame for the points that comprise the penalty arc — premier_league_feature_penalty_arc","text":"Generate data frame points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty arc — premier_league_feature_penalty_arc","text":"","code":"premier_league_feature_penalty_arc(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty arc — premier_league_feature_penalty_arc","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty arc — premier_league_feature_penalty_arc","text":"data frame containing points comprise penalty arc","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_mark.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the penalty mark — premier_league_feature_penalty_mark","title":"Generate the data frame for the points that comprise the penalty mark — premier_league_feature_penalty_mark","text":"Generate data frame points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_mark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the penalty mark — premier_league_feature_penalty_mark","text":"","code":"premier_league_feature_penalty_mark(   touchline_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_mark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the penalty mark — premier_league_feature_penalty_mark","text":"touchline_length length touchline. entire length (halves) pitch full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_penalty_mark.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the penalty mark — premier_league_feature_penalty_mark","text":"data frame containing points comprise penalty mark","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_touchlines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the touchlines — premier_league_feature_touchlines","title":"Generate the data frame for the points that comprise the touchlines — premier_league_feature_touchlines","text":"Generate data frame points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_touchlines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the touchlines — premier_league_feature_touchlines","text":"","code":"premier_league_feature_touchlines(   touchline_length,   goal_line_length,   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_touchlines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the touchlines — premier_league_feature_touchlines","text":"touchline_length length touchline. entire length (halves) pitch goal_line_length length goal line full_surf boolean indicating whether plot full surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_feature_touchlines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the touchlines — premier_league_feature_touchlines","text":"list data frames containing points comprise touchlines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for a Premier League pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_premier_league() function (or its wrapper geom_soccer()) — premier_league_features_set_colors","title":"Generate the list of colors for a Premier League pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_premier_league() function (or its wrapper geom_soccer()) — premier_league_features_set_colors","text":"Generate list colors Premier League pitch plot. defaults can overwritten supplying names list elements geom_premier_league() function (wrapper geom_soccer())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for a Premier League pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_premier_league() function (or its wrapper geom_soccer()) — premier_league_features_set_colors","text":"","code":"premier_league_features_set_colors(   grass_color = \"#196f0c\",   touchline_1_color = \"#ffffff\",   touchline_2_color = \"#ffffff\",   goal_line_color = \"#ffffff\",   halfway_line_color = \"#ffffff\",   center_circle_color = \"#ffffff\",   corner_circle_1_color = \"#ffffff\",   corner_circle_2_color = \"#ffffff\",   corner_circle_3_color = \"#ffffff\",   corner_circle_4_color = \"#ffffff\",   box_5.5m_color = \"#ffffff\",   box_9.15m_color = \"#ffffff\",   penalty_arc_color = \"#ffffff\",   penalty_mark_color = \"#ffffff\",   center_mark_color = \"#ffffff\",   goal_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for a Premier League pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_premier_league() function (or its wrapper geom_soccer()) — premier_league_features_set_colors","text":"grass_color hexadecimal string representing color use feature touchline_1_color hexadecimal string representing color use feature touchline_2_color hexadecimal string representing color use feature goal_line_color hexadecimal string representing color use feature halfway_line_color hexadecimal string representing color use feature center_circle_color hexadecimal string representing color use feature corner_circle_1_color hexadecimal string representing color use feature corner_circle_2_color hexadecimal string representing color use feature corner_circle_3_color hexadecimal string representing color use feature corner_circle_4_color hexadecimal string representing color use feature box_5.5m_color hexadecimal string representing color use feature box_9.15m_color hexadecimal string representing color use feature penalty_arc_color hexadecimal string representing color use feature penalty_mark_color hexadecimal string representing color use feature center_mark_color hexadecimal string representing color use feature goal_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/premier_league_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for a Premier League pitch plot. The defaults can\nbe overwritten by supplying the names of the list elements to the\ngeom_premier_league() function (or its wrapper geom_soccer()) — premier_league_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/quadratic_formula.html","id":null,"dir":"Reference","previous_headings":"","what":"Deploy the quadratic formula given inputs a, b, and c\nsuch that they satisfy the equation (a * (x ^ 2)) + bx + c = 0 — quadratic_formula","title":"Deploy the quadratic formula given inputs a, b, and c\nsuch that they satisfy the equation (a * (x ^ 2)) + bx + c = 0 — quadratic_formula","text":"Deploy quadratic formula given inputs , b, c satisfy equation (* (x ^ 2)) + bx + c = 0","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/quadratic_formula.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deploy the quadratic formula given inputs a, b, and c\nsuch that they satisfy the equation (a * (x ^ 2)) + bx + c = 0 — quadratic_formula","text":"","code":"quadratic_formula(a, b, c)"},{"path":"https://rossdrucker.github.io/sportyR/reference/quadratic_formula.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deploy the quadratic formula given inputs a, b, and c\nsuch that they satisfy the equation (a * (x ^ 2)) + bx + c = 0 — quadratic_formula","text":"coefficient squared term b coefficient linear term c coefficient constant term","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/quadratic_formula.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deploy the quadratic formula given inputs a, b, and c\nsuch that they satisfy the equation (a * (x ^ 2)) + bx + c = 0 — quadratic_formula","text":"solutions equation","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/reflect.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a mathematical reflection of coordinates over a specified axis — reflect","title":"Perform a mathematical reflection of coordinates over a specified axis — reflect","text":"Perform mathematical reflection coordinates specified axis","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/reflect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a mathematical reflection of coordinates over a specified axis — reflect","text":"","code":"reflect(df, over_x = FALSE, over_y = TRUE)"},{"path":"https://rossdrucker.github.io/sportyR/reference/reflect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a mathematical reflection of coordinates over a specified axis — reflect","text":"df data frame reflect. must x y columns over_x boolean indicating whether reflect x axis. Default: FALSE over_y boolean indicating whether reflect y axis. Default: TRUE","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/reflect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a mathematical reflection of coordinates over a specified axis — reflect","text":"reflected data frame","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/reflect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a mathematical reflection of coordinates over a specified axis — reflect","text":"","code":"reflect(data.frame(x = 1, y = 0)) #>    x y #> 1 -1 0"},{"path":"https://rossdrucker.github.io/sportyR/reference/rotate_coords.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","title":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","text":"Perform mathematical rotation (0, 0) coordinates. rotation given x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\* cos(theta)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/rotate_coords.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","text":"","code":"rotate_coords(df, rotation_dir = \"ccw\", angle = 0.5)"},{"path":"https://rossdrucker.github.io/sportyR/reference/rotate_coords.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","text":"df data frame rotate. must x y columns rotation_dir direction rotate coordinates. ccw corresponds counterclockwise angle angle (radians, divided pi) rotate coordinates","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/rotate_coords.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","text":"rotated data frame","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/rotate_coords.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a mathematical rotation about (0, 0) of coordinates. This rotation is\ngiven as x' = x \\* cos(theta) - y \\* sin(theta) y' = x \\* sin(theta) + y \\*\ncos(theta) — rotate_coords","text":"","code":"rotate_coords(data.frame(x = 0, y = 1)) #>    x            y #> 1 -1 6.123234e-17"},{"path":"https://rossdrucker.github.io/sportyR/reference/sport_lookup.html","id":null,"dir":"Reference","previous_headings":"","what":"A list of lists (JSON) that associates a sport with its various league codes\nthat can be plotted from its geom_sport() function. This data is primarily\nuseful in the caniplot_sport() function, and is intended to be an internal\ndataset. — sport_lookup","title":"A list of lists (JSON) that associates a sport with its various league codes\nthat can be plotted from its geom_sport() function. This data is primarily\nuseful in the caniplot_sport() function, and is intended to be an internal\ndataset. — sport_lookup","text":"list lists (JSON) associates sport various league codes can plotted geom_sport() function. data primarily useful caniplot_sport() function, intended internal dataset.","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/sport_lookup.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A list of lists (JSON) that associates a sport with its various league codes\nthat can be plotted from its geom_sport() function. This data is primarily\nuseful in the caniplot_sport() function, and is intended to be an internal\ndataset. — sport_lookup","text":"","code":"sport_lookup"},{"path":"https://rossdrucker.github.io/sportyR/reference/sport_lookup.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"A list of lists (JSON) that associates a sport with its various league codes\nthat can be plotted from its geom_sport() function. This data is primarily\nuseful in the caniplot_sport() function, and is intended to be an internal\ndataset. — sport_lookup","text":"object class list length 6.","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/sport_lookup.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"A list of lists (JSON) that associates a sport with its various league codes\nthat can be plotted from its geom_sport() function. This data is primarily\nuseful in the caniplot_sport() function, and is intended to be an internal\ndataset. — sport_lookup","text":"list sports associated leagues list sublist, key-value(s) pairing","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/translate.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform a mathematical translation of coordinates — translate","title":"Perform a mathematical translation of coordinates — translate","text":"Perform mathematical translation coordinates","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/translate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform a mathematical translation of coordinates — translate","text":"","code":"translate(df, translate_x = 0, translate_y = 0)"},{"path":"https://rossdrucker.github.io/sportyR/reference/translate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform a mathematical translation of coordinates — translate","text":"df data frame translate must x y columns translate_x number units (input data frame's units) translate points +x direction. Default: 0 translate_y number units (input data frame's units) translate points +y direction. Default: 0","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/translate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform a mathematical translation of coordinates — translate","text":"translated data frame","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/translate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Perform a mathematical translation of coordinates — translate","text":"","code":"translate(data.frame(x = 0, y = 1), translate_x = 1) #>   x y #> 1 1 1 translate(data.frame(x = 0, y = 1), translate_y = 1) #>   x y #> 1 0 2"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_backboard.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the backboard — wnba_feature_backboard","title":"Generate the data frame for the points that comprise the backboard — wnba_feature_backboard","text":"Generate data frame points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_backboard.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the backboard — wnba_feature_backboard","text":"","code":"wnba_feature_backboard(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_backboard.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the backboard — wnba_feature_backboard","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_backboard.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the backboard — wnba_feature_backboard","text":"data frame containing points comprise backboard","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_basket_ring.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the basket ring — wnba_feature_basket_ring","title":"Generate the data frame for the points that comprise the basket ring — wnba_feature_basket_ring","text":"Generate data frame points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_basket_ring.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the basket ring — wnba_feature_basket_ring","text":"","code":"wnba_feature_basket_ring(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_basket_ring.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the basket ring — wnba_feature_basket_ring","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_basket_ring.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the basket ring — wnba_feature_basket_ring","text":"data frame containing points comprise basket ring","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_center_circles.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the center circles — wnba_feature_center_circles","title":"Generate the data frame for the points that comprise the center circles — wnba_feature_center_circles","text":"Generate data frame points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_center_circles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the center circles — wnba_feature_center_circles","text":"","code":"wnba_feature_center_circles(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_center_circles.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the center circles — wnba_feature_center_circles","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_center_circles.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the center circles — wnba_feature_center_circles","text":"list data frames containing points comprise center circles","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_apron.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the court apron — wnba_feature_court_apron","title":"Generate the data frame for the points that comprise the court apron — wnba_feature_court_apron","text":"Generate data frame points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_apron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the court apron — wnba_feature_court_apron","text":"","code":"wnba_feature_court_apron(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_apron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the court apron — wnba_feature_court_apron","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_apron.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the court apron — wnba_feature_court_apron","text":"data frame containing points comprise court apron","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_bground.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise a regulation WNBA court — wnba_feature_court_bground","title":"Generate the data frame for the points that comprise a regulation WNBA court — wnba_feature_court_bground","text":"Generate data frame points comprise regulation WNBA court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_bground.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise a regulation WNBA court — wnba_feature_court_bground","text":"","code":"wnba_feature_court_bground(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_bground.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise a regulation WNBA court — wnba_feature_court_bground","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_court_bground.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise a regulation WNBA court — wnba_feature_court_bground","text":"data frame containing points comprise court","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_division_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the division line — wnba_feature_division_line","title":"Generate the data frame for the points that comprise the division line — wnba_feature_division_line","text":"Generate data frame points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_division_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the division line — wnba_feature_division_line","text":"","code":"wnba_feature_division_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_division_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the division line — wnba_feature_division_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_division_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the division line — wnba_feature_division_line","text":"data frame containing points comprise division line","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_endline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the end lines — wnba_feature_endline","title":"Generate the data frame for the points that comprise the end lines — wnba_feature_endline","text":"Generate data frame points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_endline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the end lines — wnba_feature_endline","text":"","code":"wnba_feature_endline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_endline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the end lines — wnba_feature_endline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_endline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the end lines — wnba_feature_endline","text":"data frame containing points comprise end lines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_dashed_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — wnba_feature_free_throw_dashed_semi_circle","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — wnba_feature_free_throw_dashed_semi_circle","text":"Generate data frames points comprise dashed part free-throw circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_dashed_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — wnba_feature_free_throw_dashed_semi_circle","text":"","code":"wnba_feature_free_throw_dashed_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_dashed_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — wnba_feature_free_throw_dashed_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_dashed_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the dashed part of the\nfree-throw circle — wnba_feature_free_throw_dashed_semi_circle","text":"list data frames containing points comprise dashed part free-throw circle","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — wnba_feature_free_throw_lane","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — wnba_feature_free_throw_lane","text":"Generate data frames points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — wnba_feature_free_throw_lane","text":"","code":"wnba_feature_free_throw_lane(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — wnba_feature_free_throw_lane","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise both the professional\nand amateur free-throw lanes — wnba_feature_free_throw_lane","text":"list data frames containing points comprise professional amateur free-throw lanes","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — wnba_feature_free_throw_lane_lines","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — wnba_feature_free_throw_lane_lines","text":"Generate data frames points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — wnba_feature_free_throw_lane_lines","text":"","code":"wnba_feature_free_throw_lane_lines(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — wnba_feature_free_throw_lane_lines","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_lane_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw lane\nlines (the blocks) — wnba_feature_free_throw_lane_lines","text":"list data frames containing points comprise free-throw lane lines (blocks)","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_semi_circle.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — wnba_feature_free_throw_semi_circle","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — wnba_feature_free_throw_semi_circle","text":"Generate data frames points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_semi_circle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — wnba_feature_free_throw_semi_circle","text":"","code":"wnba_feature_free_throw_semi_circle(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_semi_circle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — wnba_feature_free_throw_semi_circle","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_free_throw_semi_circle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the free-throw\nsemi-circles (where a free-throw shooter would shoot from) — wnba_feature_free_throw_semi_circle","text":"list data frame containing points comprise free-throw semi-circles (free-throw shooter shoot )","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_lower_defensive_box.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the lower defensive box — wnba_feature_lower_defensive_box","title":"Generate the data frames for the points that comprise the lower defensive box — wnba_feature_lower_defensive_box","text":"Generate data frames points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_lower_defensive_box.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the lower defensive box — wnba_feature_lower_defensive_box","text":"","code":"wnba_feature_lower_defensive_box(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_lower_defensive_box.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the lower defensive box — wnba_feature_lower_defensive_box","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_lower_defensive_box.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the lower defensive box — wnba_feature_lower_defensive_box","text":"data frame containing points comprise lower defensive box","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_net.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the net — wnba_feature_net","title":"Generate the data frame for the points that comprise the net — wnba_feature_net","text":"Generate data frame points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_net.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the net — wnba_feature_net","text":"","code":"wnba_feature_net(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_net.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the net — wnba_feature_net","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_net.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the net — wnba_feature_net","text":"data frame containing points comprise net","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_restricted_area_arc.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — wnba_feature_restricted_area_arc","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — wnba_feature_restricted_area_arc","text":"Generate data frame points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_restricted_area_arc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — wnba_feature_restricted_area_arc","text":"","code":"wnba_feature_restricted_area_arc(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_restricted_area_arc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — wnba_feature_restricted_area_arc","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_restricted_area_arc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the restricted area arc\nunderneath the basket — wnba_feature_restricted_area_arc","text":"data frame containing points comprise restricted area arc underneath basket","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_sideline.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the sidelines — wnba_feature_sideline","title":"Generate the data frame for the points that comprise the sidelines — wnba_feature_sideline","text":"Generate data frame points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_sideline.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the sidelines — wnba_feature_sideline","text":"","code":"wnba_feature_sideline(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_sideline.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the sidelines — wnba_feature_sideline","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_sideline.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the sidelines — wnba_feature_sideline","text":"list data frames containing points comprise sidelines","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_substitution_area.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the substitution area — wnba_feature_substitution_area","title":"Generate the data frame for the points that comprise the substitution area — wnba_feature_substitution_area","text":"Generate data frame points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_substitution_area.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the substitution area — wnba_feature_substitution_area","text":"","code":"wnba_feature_substitution_area(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_substitution_area.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the substitution area — wnba_feature_substitution_area","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_substitution_area.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the substitution area — wnba_feature_substitution_area","text":"data frame containing points comprise substitution area","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_team_bench.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frames for the points that comprise the team bench — wnba_feature_team_bench","title":"Generate the data frames for the points that comprise the team bench — wnba_feature_team_bench","text":"Generate data frames points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_team_bench.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frames for the points that comprise the team bench — wnba_feature_team_bench","text":"","code":"wnba_feature_team_bench(full_surf = TRUE, rotate = FALSE, rotation_dir = \"ccw\")"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_team_bench.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frames for the points that comprise the team bench — wnba_feature_team_bench","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_team_bench.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frames for the points that comprise the team bench — wnba_feature_team_bench","text":"list data frames containing points comprise team bench","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_three_point_line.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — wnba_feature_three_point_line","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — wnba_feature_three_point_line","text":"Generate data frame points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_three_point_line.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — wnba_feature_three_point_line","text":"","code":"wnba_feature_three_point_line(   full_surf = TRUE,   rotate = FALSE,   rotation_dir = \"ccw\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_three_point_line.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — wnba_feature_three_point_line","text":"full_surf boolean indicating whether feature needed full-surface representation surface. Default: TRUE rotate boolean indicating whether feature needs rotated. Default: FALSE rotation_dir string indicating direction rotate feature. Default: 'ccw'","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_feature_three_point_line.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the data frame for the points that comprise the three-point line and\ntwo-point range — wnba_feature_three_point_line","text":"list data frames containing points comprise three-point line two-point range","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_features_set_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate the list of colors for a WNBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_wnba() function (or its wrapper geom_basketball()) — wnba_features_set_colors","title":"Generate the list of colors for a WNBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_wnba() function (or its wrapper geom_basketball()) — wnba_features_set_colors","text":"Generate list colors WNBA court plot. defaults can overwritten supplying names list elements geom_wnba() function (wrapper geom_basketball())","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_features_set_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate the list of colors for a WNBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_wnba() function (or its wrapper geom_basketball()) — wnba_features_set_colors","text":"","code":"wnba_features_set_colors(   court_background_color = \"#d2ab6f\",   inner_center_circle_color = \"#000000\",   outer_center_circle_color = \"#000000\",   division_line_color = \"#000000\",   endline_color = \"#000000\",   sideline_color = \"#000000\",   team_bench_color = \"#000000\",   substitution_area_color = \"#000000\",   court_apron_color = \"#d2ab6f\",   three_point_line_color = \"#000000\",   two_point_range_color = \"#d2ab6f\",   professional_free_throw_lane_color = \"#000000\",   professional_painted_area_color = \"#d2ab6f\",   amateur_free_throw_lane_color = \"#000000\",   amateur_painted_area_color = \"#d2ab6f\",   professional_free_throw_lane_lines_color = \"#000000\",   amateur_free_throw_lane_lines_color = \"#000000\",   free_throw_semi_circle_line_color = \"#000000\",   free_throw_semi_circle_fill_color = \"#d2ab6f\",   free_throw_dashed_semi_circle_color = \"#000000\",   lower_defensive_box_color = \"#000000\",   restricted_area_arc_color = \"#000000\",   backboard_color = \"#000000\",   basket_ring_color = \"#000000\",   net_color = \"#ffffff\" )"},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_features_set_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate the list of colors for a WNBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_wnba() function (or its wrapper geom_basketball()) — wnba_features_set_colors","text":"court_background_color hexadecimal string representing color use feature inner_center_circle_color hexadecimal string representing color use feature outer_center_circle_color hexadecimal string representing color use feature division_line_color hexadecimal string representing color use feature endline_color hexadecimal string representing color use feature sideline_color hexadecimal string representing color use feature team_bench_color hexadecimal string representing color use feature substitution_area_color hexadecimal string representing color use feature court_apron_color hexadecimal string representing color use feature three_point_line_color hexadecimal string representing color use feature two_point_range_color hexadecimal string representing color use feature professional_free_throw_lane_color hexadecimal string representing color use feature professional_painted_area_color hexadecimal string representing color use feature amateur_free_throw_lane_color hexadecimal string representing color use feature amateur_painted_area_color hexadecimal string representing color use feature professional_free_throw_lane_lines_color hexadecimal string representing color use feature amateur_free_throw_lane_lines_color hexadecimal string representing color use feature free_throw_semi_circle_line_color hexadecimal string representing color use feature free_throw_semi_circle_fill_color hexadecimal string representing color use feature free_throw_dashed_semi_circle_color hexadecimal string representing color use feature lower_defensive_box_color hexadecimal string representing color use feature restricted_area_arc_color hexadecimal string representing color use feature backboard_color hexadecimal string representing color use feature basket_ring_color hexadecimal string representing color use feature net_color hexadecimal string representing color use feature","code":""},{"path":"https://rossdrucker.github.io/sportyR/reference/wnba_features_set_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate the list of colors for a WNBA court plot. The defaults can be\noverwritten by supplying the names of the list elements to the\ngeom_wnba() function (or its wrapper geom_basketball()) — wnba_features_set_colors","text":"list hexadecimal colors use color features resulting plot","code":""},{"path":"https://rossdrucker.github.io/sportyR/news/index.html","id":"sportyr-104","dir":"Changelog","previous_headings":"","what":"sportyR 1.0.4","title":"sportyR 1.0.4","text":"Removed requirement include plot caption color (fixes #3) September 7, 2021, NWHL changed names PHF. name change now reflected package, NWHL still valid backwards compatible.","code":""},{"path":"https://rossdrucker.github.io/sportyR/news/index.html","id":"sportyr-103","dir":"Changelog","previous_headings":"","what":"sportyR 1.0.3","title":"sportyR 1.0.3","text":"Added tennis plotting capability Fixed issue NCAA football plot hash marks (initially typed 6, typed 60) Fixed minor bug soccer plots (changed rotation_dir = TRUE rotation_dir = \"ccw\") Fixed minor bug NCAA hockey plots plotting units ft (reordered geom_ncaa_hockey() code adjust units plotting) Restructured code tests/testthat/test-plot-functions.R closely resemble rest repository structure. Plots now tested sport rather plot-specific feature (e.g. units rotation) Fixed minor bug converting millimeters feet (originally specified 3048mm per foot, corrected 304.8mm per foot)","code":""},{"path":"https://rossdrucker.github.io/sportyR/news/index.html","id":"sportyr-102","dir":"Changelog","previous_headings":"","what":"sportyR 1.0.2","title":"sportyR 1.0.2","text":"Added CFL plotting capability","code":""},{"path":"https://rossdrucker.github.io/sportyR/news/index.html","id":"sportyr-101","dir":"Changelog","previous_headings":"","what":"sportyR 1.0.1","title":"sportyR 1.0.1","text":"CRAN release: 2021-04-20 Introduced new testing infrastructure","code":""},{"path":"https://rossdrucker.github.io/sportyR/news/index.html","id":"sportyr-100","dir":"Changelog","previous_headings":"","what":"sportyR 1.0.0","title":"sportyR 1.0.0","text":"CRAN release: 2021-04-19 Initial release! Ability plot baseball, basketball ((W)NBA, NCAA, FIBA), football (NFL NCAA), hockey ((W)NHL, IIHF, NCAA), soccer (FIFA, MLS, NCAA, NWSL, Premier League) included, capability customize outputs specific colors.","code":""}]
